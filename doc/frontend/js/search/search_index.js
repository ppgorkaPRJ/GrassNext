var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.508,1,0.885]],["body/components/AboutComponent.html",[0,0.758,1,1.391,2,1.275,3,0.213,4,0.184,5,0.914,6,0.914,7,0.914,8,0.184,9,1.758,10,0.243,11,0.831,12,1.455,13,1.849,14,2.324,15,2.06,16,2.06,17,2.678,18,0.914,19,2.432,20,2.228,21,1.392,22,3.214,23,1.524,24,3.214,25,0.546,26,0.032,27,0.546,28,0.213,29,0.08,30,3.625,31,5.694,32,4.351,33,4.351,34,5.286,35,5.822,36,4.109,37,3.214,38,5.694,39,3.214,40,3.214,41,3.214,42,2.678,43,4.109,44,3.214,45,3.214,46,3.214,47,2.06,48,3.214,49,3.214,50,3.214,51,4.351,52,3.214,53,4.351,54,3.625,55,3.214,56,3.214,57,3.214,58,3.214,59,3.214,60,3.214,61,3.146,62,3.214,63,3.214,64,3.214,65,3.214,66,3.214,67,3.214,68,2.324,69,3.214,70,2.678,71,1.849,72,4.351,73,3.214,74,3.214,75,4.933,76,3.214,77,2.678,78,3.214,79,4.933,80,2.678,81,4.351,82,5.523,83,3.214,84,3.214,85,2.678,86,1.275,87,3.214,88,1.524,89,3.214,90,2.966,91,5.286,92,3.214,93,3.625,94,2.678,95,2.678,96,4.351,97,3.214,98,5.286,99,3.214,100,3.214,101,2.504,102,3.214,103,3.214,104,4.933,105,3.214,106,3.214,107,3.214,108,3.214,109,3.214,110,3.214,111,3.214,112,3.214,113,3.214,114,3.214,115,3.214,116,3.214,117,3.214,118,3.214,119,3.625,120,3.214,121,3.214,122,3.214,123,3.214,124,4.351,125,4.351,126,2.678,127,3.214,128,3.214,129,4.351,130,3.214,131,3.214,132,2.324,133,3.214,134,3.214,135,3.214,136,2.678,137,3.214,138,0.769,139,1.275,140,1.392,141,0.914,142,1.885,143,0.914,144,0.575,145,0.914,146,0.648,147,0.914,148,0.648,149,0.838,150,0.914,151,0.648,152,0.914,153,0.706,154,0.914,155,0.595,156,0.914,157,0.648,158,0.914,159,0.648,160,0.914,161,0.648,162,0.914,163,0.914,164,0.914,165,0.017,166,0.017]],["title/components/AppComponent.html",[0,0.508,146,0.964]],["body/components/AppComponent.html",[0,0.962,1,0.982,2,1.822,3,0.351,4,0.304,5,1.509,6,1.509,7,1.509,8,0.304,10,0.401,12,1.536,18,1.509,19,2.689,20,2.463,21,1.989,25,0.901,26,0.033,27,0.901,28,0.351,29,0.132,94,3.825,95,3.825,138,1.269,139,1.822,140,1.989,141,1.509,142,2.365,143,1.509,144,0.822,145,1.509,146,1.79,147,1.509,148,1.07,149,1.383,150,1.509,151,1.07,152,1.509,153,1.165,154,1.509,155,0.982,156,1.509,157,1.07,158,1.509,159,1.07,160,1.509,161,1.07,162,1.509,163,1.509,164,1.509,165,0.024,166,0.024,167,3.484,168,2.902,169,3.142,170,2.392,171,3.825,172,4.592,173,1.672,174,3.32,175,4.592,176,4.592,177,4.592,178,4.592,179,5.136,180,4.592,181,0.564,182,0.822,183,5.136,184,0.564,185,1.165,186,2.233,187,1.269,188,0.687,189,3.484]],["title/modules/AppModule.html",[190,2.012,191,2.012]],["body/modules/AppModule.html",[1,1.469,3,0.247,4,0.213,8,0.213,10,0.281,12,1.565,20,0.97,25,1.654,26,0.034,27,0.632,28,0.247,29,0.161,138,0.89,146,1.804,148,1.6,149,0.97,151,1.6,153,1.742,155,1.469,157,1.6,159,1.6,161,1.6,165,0.018,166,0.018,169,2.064,171,2.988,174,2.593,190,2.723,191,4.052,192,1.407,193,2.723,194,3.539,195,3.539,196,2.988,197,1.768,198,2.036,199,2.036,200,2.036,201,2.036,202,2.998,203,2.593,204,2.036,205,1.768,206,2.444,207,2.988,208,3.586,209,2.988,210,2.988,211,3.586,212,2.988,213,1.768,214,3.586,215,2.988,216,2.444,217,2.444,218,2.036,219,2.036,220,2.444,221,2.444,222,2.444,223,2.444,224,3.586,225,2.444,226,2.444,227,3.586,228,2.444,229,3.586,230,2.444,231,3.586,232,2.444,233,3.586,234,2.444,235,3.586,236,2.036,237,2.036,238,3.586,239,2.444,240,3.586,241,2.444,242,3.586,243,2.036,244,1.407,245,3.586,246,2.444,247,3.586,248,3.586,249,2.444,250,3.586,251,2.444,252,3.586,253,2.444,254,3.586,255,2.444,256,1.768,257,3.586,258,2.036,259,3.586,260,2.444,261,3.586,262,2.444,263,2.444,264,3.586,265,2.444,266,2.444,267,3.586,268,2.036,269,1.567,270,2.036]],["title/modules/AppRoutingModule.html",[190,2.012,202,1.806]],["body/modules/AppRoutingModule.html",[0,0.809,1,1.409,3,0.401,4,0.347,8,0.347,12,1.828,13,2.286,25,1.484,26,0.034,27,1.028,28,0.401,29,0.15,155,1.409,165,0.026,166,0.026,170,2.069,192,2.286,197,2.873,202,3.146,207,3.309,209,3.309,210,4.163,218,3.309,219,3.309,271,3.972,272,3.972,273,3.309,274,4.997,275,3.677,276,2.873,277,3.309,278,5.736,279,4.997,280,3.953,281,4.997,282,4.163,283,2.546,284,2.546,285,3.309,286,3.309,287,3.309,288,3.309,289,3.309,290,3.309,291,3.972,292,3.972]],["title/injectables/BackendDataService.html",[293,1.488,294,2.269]],["body/injectables/BackendDataService.html",[3,0.138,4,0.119,8,0.119,10,0.52,15,1.458,16,1.458,25,1.251,26,0.034,27,0.354,28,0.138,29,0.111,30,1.896,36,1.896,42,1.896,47,2.611,61,3.268,80,3.145,86,1.498,88,1.079,90,3.032,101,2.601,144,0.926,165,0.012,166,0.012,169,0.788,170,1.185,181,0.222,182,0.407,184,0.731,185,2.025,186,0.878,187,0.499,188,0.979,258,1.14,287,1.896,288,1.896,290,1.896,293,1.079,294,1.645,295,0.878,296,4.228,297,1.14,298,1.185,299,2.275,300,2.275,301,2.275,302,2.275,303,2.275,304,2.275,305,3.145,306,2.92,307,2.275,308,3.401,309,2.275,310,2.275,311,3.401,312,3.401,313,2.275,314,2.275,315,2.275,316,0.976,317,1.369,318,4.691,319,2.275,320,1.137,321,4.317,322,2.275,323,1.459,324,1.326,325,1.309,326,2.275,327,1.645,328,2.275,329,2.932,330,1.369,331,5.075,332,3.393,333,2.945,334,4.69,335,2.443,336,3.112,337,4.073,338,1.369,339,2.945,340,3.765,341,2.275,342,1.473,343,2.275,344,1.159,345,1.369,346,1.645,347,3.401,348,2.275,349,2.121,350,2.92,351,1.896,352,2.74,353,2.833,354,1.872,355,3.401,356,2.275,357,1.369,358,1.931,359,2.46,360,4.073,361,2.432,362,2.275,363,1.369,364,2.42,365,1.369,366,1.872,367,1.872,368,4.073,369,2.275,370,1.957,371,2.275,372,4.073,373,2.275,374,1.369,375,1.896,376,4.073,377,2.275,378,2.275,379,2.767,380,1.369,381,3.59,382,3.596,383,1.896,384,3.393,385,3.401,386,2.275,387,2.897,388,1.369,389,2.275,390,3.145,391,2.833,392,1.896,393,1.771,394,1.896,395,2.275,396,1.309,397,2.275,398,2.275,399,2.275,400,4.073,401,1.458,402,1.369,403,1.369,404,1.309,405,1.369,406,1.14,407,1.369,408,1.369,409,1.185,410,1.369,411,1.369,412,1.14,413,1.559,414,1.369,415,3.544,416,5.63,417,1.369,418,1.369,419,1.369,420,1.369,421,1.369,422,1.369,423,4.317,424,3.775,425,1.369,426,2.275,427,1.14,428,1.369,429,2.92,430,2.92,431,1.369,432,2.275,433,2.275,434,1.369,435,1.369,436,1.369,437,1.369,438,1.369,439,1.369,440,1.369]],["title/classes/CalendarDate.html",[29,0.119,354,2.012]],["body/classes/CalendarDate.html",[3,0.332,4,0.287,8,0.287,10,0.509,11,0.851,26,0.033,28,0.332,29,0.125,86,1.755,144,0.589,165,0.023,166,0.023,181,0.533,182,0.792,184,0.901,188,1.098,316,1.479,320,1.479,323,0.928,324,1.011,329,2.303,344,1.933,346,2.38,354,2.834,358,2.096,379,3.97,413,1.534,441,1.426,442,4.777,443,2.742,444,2.11,445,2.38,446,2.017,447,5.078,448,4.993,449,6.148,450,6.148,451,3.292,452,4.422,453,2.834,454,3.684,455,3.292,456,2.78,457,4.422,458,3.684,459,5.734,460,4.777,461,3.197,462,4.422,463,4.422,464,3.292,465,3.292]],["title/interfaces/Contour.html",[393,1.634,466,1.359]],["body/interfaces/Contour.html",[3,0.359,4,0.31,8,0.31,10,0.41,11,1.342,26,0.033,28,0.524,71,2.047,165,0.024,166,0.024,173,2.206,181,0.576,182,0.834,184,0.84,185,2.048,187,1.296,188,0.918,283,2.984,336,2.047,342,1.541,344,1.755,393,3.155,409,2.425,456,1.853,466,2.248,467,2.281,468,2.281,469,3.367,470,3.367,471,4.38,472,2.248,473,3.367,474,4.38,475,4.38,476,2.573,477,2.573,478,2.573,479,4.131,480,2.573,481,2.281,482,2.573,483,2.573,484,1.687,485,2.425,486,2.425,487,1.853,488,2.984,489,3.367]],["title/interfaces/Contours.html",[409,1.634,466,1.359]],["body/interfaces/Contours.html",[3,0.357,4,0.309,8,0.309,10,0.407,11,1.338,26,0.034,28,0.522,71,2.034,165,0.024,166,0.024,173,2.13,181,0.572,182,0.83,184,0.889,185,1.994,187,1.287,188,0.697,283,2.972,336,2.034,342,1.531,344,1.831,392,2.945,393,3.186,409,3.047,456,2.694,466,2.241,467,2.266,468,2.266,469,2.557,470,2.557,471,3.971,472,2.008,473,2.557,474,3.971,475,3.971,476,3.971,477,3.971,478,3.971,479,4.123,480,2.557,481,2.266,482,2.557,483,2.557,484,1.676,485,2.415,486,2.415,487,1.841,488,2.972,489,3.353,490,3.535,491,3.535]],["title/classes/Detector.html",[29,0.119,352,1.634]],["body/classes/Detector.html",[3,0.241,4,0.208,8,0.208,10,0.405,11,0.911,25,0.911,26,0.034,28,0.241,29,0.09,77,2.934,88,1.67,144,0.828,165,0.018,166,0.018,173,2.15,181,0.386,182,0.828,184,0.836,185,1.65,188,1.164,244,1.372,316,1.178,320,1.178,323,0.673,324,0.733,335,2.181,339,3.734,342,2.003,344,1.515,349,2.57,351,4.11,352,2.782,359,3.965,396,2.027,413,1.515,415,3.31,441,1.033,446,2.007,472,1.526,484,1.67,485,2.69,486,2.69,487,3.167,492,1.987,493,5.164,494,5.164,495,5.164,496,5.164,497,4.625,498,4.625,499,4.625,500,1.529,501,3.874,502,2.385,503,2.258,504,2.41,505,2.181,506,4.744,507,5.164,508,4.188,509,5.695,510,3.489,511,2.385,512,2.385,513,2.385,514,2.385,515,2.385,516,2.385,517,4.625,518,5.695,519,5.164,520,4.625,521,2.385,522,4.625,523,2.385,524,4.625,525,2.547,526,2.385,527,2.385,528,2.385,529,2.385,530,2.385,531,2.385]],["title/components/DialogLegendComponent.html",[0,0.508,148,0.964]],["body/components/DialogLegendComponent.html",[0,0.713,1,0.522,2,1.152,3,0.187,4,0.162,5,0.802,6,0.802,7,0.802,8,0.162,10,0.412,12,0.971,15,1.861,18,0.802,19,2.353,20,2.155,21,1.258,23,1.377,25,0.479,26,0.03,27,0.479,28,0.187,29,0.07,47,2.998,54,3.38,61,2.1,68,2.934,70,2.419,90,1.513,101,1.671,126,2.419,132,2.1,138,1.605,139,1.152,140,1.258,141,0.802,142,1.758,143,0.802,144,0.52,145,0.802,146,0.569,147,0.802,148,1.437,149,2.066,150,0.802,151,0.569,152,0.802,153,0.619,154,0.802,155,0.522,156,0.802,157,0.569,158,0.802,159,0.569,160,0.802,161,0.569,162,1.552,163,0.802,164,0.802,165,0.015,166,0.015,170,1.513,174,2.1,184,0.47,256,2.934,269,1.187,286,2.419,305,3.896,323,0.819,329,2.113,332,2.419,334,2.419,344,1.246,346,2.1,349,1.513,352,2.113,358,1.377,359,2.934,361,2.419,364,3.813,366,3.632,367,3.632,379,1.861,381,2.934,394,3.896,427,2.419,447,2.419,466,1.258,484,1.377,487,1.513,503,1.861,525,2.1,532,1.542,533,1.542,534,2.419,535,4.058,536,2.904,537,2.904,538,2.904,539,3.38,540,3.38,541,5.064,542,2.904,543,2.904,544,2.904,545,3.38,546,4.058,547,6.012,548,5.328,549,2.904,550,2.904,551,2.904,552,2.904,553,2.904,554,2.904,555,2.904,556,2.904,557,2.904,558,2.419,559,2.1,560,2.904,561,2.904,562,2.904,563,2.419,564,2.904,565,2.904,566,2.904,567,2.904,568,2.904,569,2.904,570,2.904,571,2.904,572,2.904,573,2.904,574,4.677,575,2.904,576,2.904,577,2.904,578,2.904,579,2.419,580,2.904,581,2.904,582,2.904,583,2.904,584,2.904,585,4.058,586,2.904,587,4.677,588,2.904,589,4.058,590,5.328,591,4.677,592,4.058,593,4.677,594,4.677,595,2.904,596,4.677,597,2.904,598,2.904,599,2.1,600,4.058,601,2.904,602,4.058,603,2.904,604,2.904,605,4.058,606,2.904,607,2.904,608,2.904,609,2.904,610,2.904,611,4.058,612,2.904,613,2.904,614,2.904,615,2.904,616,2.904,617,2.904,618,2.904,619,2.904,620,2.904,621,2.904,622,2.904,623,2.904,624,2.904,625,2.904,626,2.904,627,2.904,628,2.904,629,2.904,630,2.904,631,2.904,632,2.904,633,2.904,634,4.058,635,2.904,636,2.1,637,2.419,638,2.904,639,2.904]],["title/components/FooterComponent.html",[0,0.508,151,0.964]],["body/components/FooterComponent.html",[0,0.919,1,0.985,2,1.825,3,0.352,4,0.305,5,1.512,6,1.512,7,1.512,8,0.305,10,0.402,11,1.189,12,1.538,17,3.83,18,1.512,19,2.689,20,2.464,21,1.992,23,2.18,25,0.903,26,0.033,27,0.903,28,0.352,29,0.132,138,1.271,139,1.825,140,1.992,141,1.512,142,2.367,143,1.512,144,0.823,145,1.512,146,1.072,147,1.512,148,1.072,149,1.385,150,1.512,151,1.791,152,1.512,153,1.167,154,1.512,155,0.985,156,1.512,157,1.072,158,1.512,159,1.072,160,1.512,161,1.072,162,1.512,163,1.512,164,1.512,165,0.024,166,0.024,640,2.908,641,5.464,642,4.598,643,4.598,644,5.464,645,5.464,646,5.464,647,5.464,648,5.464,649,5.464,650,5.464,651,5.464]],["title/classes/GpsPoint.html",[29,0.119,501,2.012]],["body/classes/GpsPoint.html",[3,0.387,4,0.335,8,0.335,10,0.562,26,0.033,28,0.387,29,0.185,86,1.939,144,0.687,165,0.025,166,0.025,173,1.397,181,0.621,182,0.875,184,0.871,188,1.061,316,1.634,320,1.634,323,1.082,324,1.178,342,1.662,344,1.923,358,2.317,413,1.501,441,1.662,446,2,453,3.133,484,1.818,485,3.26,486,3.281,487,1.998,501,3.133,506,3.195,559,2.774,652,4.718,653,3.195,654,3.836,655,3.836,656,5.98,657,3.836,658,3.836]],["title/components/HomeComponent.html",[0,0.508,155,0.885]],["body/components/HomeComponent.html",[0,0.978,1,1.055,2,1.909,3,0.377,4,0.326,5,1.621,6,1.621,7,1.621,8,0.326,10,0.431,11,1.244,12,1.608,18,1.621,19,2.719,20,2.517,21,2.084,23,2.28,25,0.968,26,0.033,27,0.968,28,0.377,29,0.142,138,1.362,139,1.909,140,2.084,141,1.621,142,2.431,143,1.621,144,0.861,145,1.621,146,1.149,147,1.621,148,1.149,149,1.485,150,1.621,151,1.149,152,1.621,153,1.251,154,1.621,155,1.582,156,1.621,157,1.149,158,1.621,159,1.149,160,1.621,161,1.149,162,2.303,163,1.621,164,1.621,165,0.025,166,0.025,280,4.057,659,3.117,660,4.81,661,4.81,662,4.81]],["title/injectables/LocalStorageService.html",[293,1.488,663,2.269]],["body/injectables/LocalStorageService.html",[3,0.221,4,0.191,8,0.191,10,0.598,25,0.567,26,0.034,27,0.567,28,0.221,29,0.083,88,1.567,101,2.552,144,0.896,165,0.017,166,0.017,169,1.261,181,0.355,184,0.81,185,2.096,187,2.288,188,0.987,293,1.567,295,1.405,298,1.722,323,1.411,324,1.537,325,1.903,327,2.391,333,2.391,335,2.606,339,3.619,375,2.754,384,3.694,412,1.825,413,1.681,415,2.552,454,4.966,456,3.054,460,3.694,461,1.584,472,1.432,481,2.119,663,2.391,664,4.327,665,1.825,666,2.391,667,6.037,668,6.037,669,3.306,670,2.754,671,3.306,672,3.306,673,3.306,674,3.306,675,3.306,676,3.306,677,3.306,678,3.306,679,2.191,680,5.004,681,6.323,682,4.885,683,3.306,684,2.191,685,3.306,686,3.306,687,2.191,688,3.306,689,2.191,690,5.004,691,4.435,692,5.004,693,2.552,694,3.306,695,2.191,696,3.306,697,3.306,698,2.191,699,3.306,700,3.306,701,3.982,702,3.306,703,2.191,704,2.191,705,2.191]],["title/components/MapComponent.html",[0,0.508,157,0.964]],["body/components/MapComponent.html",[0,0.758,1,0.596,2,1.277,3,0.213,4,0.184,5,0.916,6,0.916,7,0.916,8,0.184,10,0.37,11,0.832,12,1.076,13,1.851,18,0.916,19,2.433,20,2.229,21,1.394,23,1.525,25,1.212,26,0.034,27,0.547,28,0.213,29,0.147,71,1.851,88,1.525,90,2.268,101,2.505,138,0.77,139,1.277,140,1.394,141,1.687,142,1.886,143,0.916,144,0.697,145,0.916,146,0.649,147,0.916,148,0.649,149,0.839,150,0.916,151,0.649,152,0.916,153,0.707,154,0.916,155,0.596,156,0.916,157,1.624,158,0.916,159,0.649,160,0.916,161,0.649,162,0.916,163,0.916,164,0.916,165,0.017,166,0.017,170,2.268,173,1.585,181,0.342,182,0.78,184,0.63,186,1.355,187,0.77,188,0.924,203,3.824,244,2.84,277,1.761,298,2.029,316,0.707,320,1.456,323,0.596,324,0.649,325,2.952,327,2.817,335,1.676,358,2.064,413,0.649,445,2.326,446,1.076,484,1.525,485,1.676,486,1.676,488,2.062,503,2.062,558,2.68,636,2.326,666,3.388,693,2.791,706,1.761,707,4.935,708,4.354,709,3.848,710,2.326,711,4.354,712,3.217,713,3.217,714,3.217,715,3.895,716,4.685,717,2.68,718,3.245,719,3.217,720,3.217,721,5.131,722,2.925,723,3.245,724,4.354,725,4.354,726,1.528,727,3.217,728,2.817,729,2.114,730,2.326,731,3.217,732,3.217,733,4.354,734,4.354,735,3.217,736,3.217,737,3.895,738,3.217,739,3.895,740,3.895,741,3.217,742,3.217,743,3.895,744,2.114,745,3.217,746,3.217,747,3.217,748,3.217,749,3.217,750,3.217,751,3.217,752,3.217,753,3.217,754,3.217,755,3.217,756,3.217,757,3.217,758,3.217,759,3.217,760,3.217,761,3.217,762,3.217,763,3.217,764,2.114,765,1.761,766,1.761,767,1.528,768,2.114,769,2.114,770,1.528,771,1.528,772,1.761,773,2.114,774,1.761,775,2.114,776,2.114,777,2.114,778,2.114,779,2.114,780,2.114,781,2.114,782,2.114,783,2.114,784,2.114,785,2.114]],["title/components/MenuComponent.html",[0,0.508,159,0.964]],["body/components/MenuComponent.html",[0,0.655,1,0.635,2,1.339,3,0.486,4,0.196,5,0.975,6,0.975,7,0.975,8,0.196,10,0.388,12,1.61,13,1.941,14,2.439,16,2.162,18,0.975,19,2.469,20,2.262,21,1.461,23,1.599,25,1.245,26,0.034,27,0.582,28,0.227,29,0.153,86,1.339,88,2.131,138,0.819,139,1.339,140,1.461,141,0.975,142,1.947,143,0.975,144,0.724,145,0.975,146,0.691,147,0.975,148,1.553,149,2.228,150,0.975,151,0.691,152,0.975,153,0.752,154,0.975,155,0.635,156,0.975,157,0.691,158,0.975,159,1.553,160,0.975,161,0.691,162,0.975,163,0.975,164,0.975,165,0.017,166,0.017,181,0.364,182,0.604,184,0.655,187,1.228,188,0.997,268,1.875,269,1.442,270,1.875,273,4.592,276,1.627,280,3.655,284,2.162,285,3.371,289,3.371,298,2.808,316,0.752,320,1.128,323,0.635,324,0.691,325,2.77,329,1.757,335,2.107,358,1.599,413,1.243,415,2.593,444,2.162,445,2.439,446,1.61,534,2.81,539,4.211,559,2.439,599,2.926,636,2.439,666,2.439,693,2.881,709,2.162,710,2.926,722,2.969,723,1.875,726,1.627,728,2.439,730,2.439,770,1.627,771,1.627,772,1.875,774,1.875,786,1.875,787,3.373,788,3.373,789,3.986,790,4.494,791,4.494,792,3.373,793,3.373,794,3.373,795,5.054,796,4.494,797,4.494,798,3.744,799,4.814,800,2.25,801,4.046,802,2.81,803,3.373,804,2.25,805,4.494,806,3.373,807,5.054,808,2.25,809,2.25,810,3.373,811,4.494,812,3.373,813,3.373,814,3.373,815,3.373,816,2.25,817,2.25,818,3.373,819,2.25,820,3.373]],["title/components/PanelComponent.html",[0,0.508,161,0.964]],["body/components/PanelComponent.html",[0,0.932,1,0.87,2,1.679,3,0.311,4,0.269,5,1.336,6,1.336,7,1.336,8,0.269,10,0.487,11,1.094,12,1.415,14,3.06,18,1.336,19,2.633,20,2.412,21,1.833,23,2.006,25,1.094,26,0.033,27,0.798,28,0.311,29,0.183,86,1.679,138,1.123,139,1.679,140,1.833,141,1.336,142,2.251,143,1.336,144,0.865,145,1.336,146,0.948,147,1.336,148,0.948,149,1.224,150,1.336,151,0.948,152,1.336,153,1.032,154,1.336,155,0.87,156,1.336,157,0.948,158,1.336,159,0.948,160,1.336,161,1.596,162,2.359,163,1.336,164,1.336,165,0.022,166,0.022,181,0.499,182,0.758,184,0.685,188,0.834,284,2.712,298,2.836,316,1.032,320,1.415,323,0.87,324,0.948,325,2.779,329,2.204,333,3.06,413,0.948,446,1.415,545,3.525,670,3.525,710,3.06,718,2.57,722,3.214,726,2.231,728,3.937,730,3.06,765,2.57,766,2.57,770,2.231,771,2.231,789,3.492,821,2.57,822,4.231,823,4.231,824,4.231,825,4.231,826,4.231,827,4.231,828,4.231,829,3.085,830,3.085,831,3.085,832,3.085]],["title/classes/PlumeData.html",[29,0.119,387,2.012]],["body/classes/PlumeData.html",[3,0.27,4,0.233,8,0.233,10,0.441,11,0.692,15,2.454,16,1.715,26,0.033,28,0.27,29,0.203,43,2.229,47,3.693,68,4.166,90,1.393,144,0.479,165,0.02,166,0.02,181,0.433,182,0.686,184,0.958,185,1.893,187,1.957,188,1.116,316,1.28,320,1.28,323,1.08,324,0.822,336,3.257,342,1.937,344,1.95,352,2.329,353,3.19,364,2.866,366,2.866,367,2.866,370,3.092,379,3.693,383,4.477,387,3.129,390,3.19,391,3.725,404,3.092,413,1.7,441,1.159,446,2.1,453,2.454,458,3.725,504,2.573,505,2.329,637,4.303,833,4.8,834,2.229,835,4.882,836,5.66,837,2.675,838,2.675,839,5.374,840,5.374,841,4.472,842,3.234,843,4.472,844,4.472,845,4.472,846,4.472,847,2.675,848,2.675,849,2.675,850,2.675,851,2.675,852,2.675,853,2.675]],["title/interfaces/Point.html",[173,1.143,466,1.359]],["body/interfaces/Point.html",[3,0.368,4,0.318,8,0.318,10,0.419,11,1.358,26,0.034,28,0.53,71,2.096,165,0.024,166,0.024,173,2.217,181,0.59,182,0.847,184,0.765,185,1.925,187,1.327,188,0.719,283,3.031,336,2.096,342,1.578,344,1.89,393,3.072,409,2.463,456,1.898,466,2.274,467,2.335,468,2.335,469,2.635,470,2.635,471,4.017,472,2.048,473,2.635,474,4.017,475,4.017,476,2.635,477,2.635,478,2.635,479,4.163,480,2.635,481,2.335,482,2.635,483,2.635,484,2.242,485,2.734,486,2.734,487,2.463,488,3.69,489,4.163]],["title/classes/PollutionType.html",[29,0.119,404,1.806]],["body/classes/PollutionType.html",[3,0.331,4,0.286,8,0.286,10,0.707,11,0.848,26,0.033,28,0.331,29,0.124,144,0.954,165,0.023,166,0.023,181,0.531,182,0.79,184,1.013,185,2.037,188,1.051,282,4.151,316,1.782,320,1.475,323,0.925,324,1.007,344,1.708,349,2.896,364,3.967,396,1.887,404,3.423,413,1.531,441,1.42,444,3.194,446,2.016,472,1.42,500,2.102,504,2.867,505,2.595,563,5.021,854,4.633,855,2.731,856,3.279,857,4.41,858,4.41,859,6.027,860,4.983,861,3.603,862,4.151,863,4.983,864,4.983,865,3.279,866,3.279,867,3.279]],["title/injectables/ToggleService.html",[293,1.488,722,1.634]],["body/injectables/ToggleService.html",[3,0.409,4,0.353,8,0.353,10,0.466,13,2.91,25,1.047,26,0.033,27,1.047,28,0.409,29,0.153,88,2.398,165,0.026,166,0.026,169,2.33,181,0.655,182,0.906,184,0.819,186,2.596,187,1.475,188,1.088,284,3.242,293,1.92,295,2.596,298,2.634,329,2.634,335,2.109,446,2.028,456,2.634,461,3.657,693,2.596,709,3.535,722,2.634,789,3.657,798,4.812,868,3.374,869,5.057,870,5.515,871,4.049,872,5.057,873,4.049,874,4.049,875,4.049,876,5.057]],["title/classes/VehicleGroup.html",[29,0.119,401,2.012]],["body/classes/VehicleGroup.html",[3,0.341,4,0.295,8,0.295,10,0.711,11,0.876,26,0.033,28,0.341,29,0.128,86,1.788,139,2.009,144,0.967,165,0.023,166,0.023,181,0.548,182,0.807,184,0.874,185,2.049,188,1.065,256,3.662,316,1.507,320,1.507,323,0.955,324,1.04,344,1.727,349,2.928,358,2.665,381,4.498,382,4.914,396,2.914,401,3.841,413,1.555,441,1.466,446,2.029,453,2.888,472,1.466,500,2.17,504,2.914,505,2.637,525,3.662,540,4.218,861,3.662,862,4.218,877,4.683,878,2.82,879,3.385,880,5.063,881,3.385,882,3.385,883,3.385]],["title/classes/WeatherStability.html",[29,0.119,370,1.806]],["body/classes/WeatherStability.html",[3,0.347,4,0.3,8,0.3,10,0.713,11,0.89,26,0.033,28,0.347,29,0.233,90,2.372,144,0.973,165,0.023,166,0.023,181,0.557,182,0.815,184,0.879,185,2.055,188,1.071,316,1.523,320,1.523,323,0.97,324,1.057,342,1.973,344,1.736,349,2.943,366,3.939,367,3.997,370,3.46,396,1.98,413,1.568,441,1.491,444,3.272,446,2.035,472,1.491,500,2.206,503,2.919,504,2.937,505,2.659,861,3.691,884,4.708,885,2.866,886,3.441,887,3.441,888,3.441,889,3.441]],["title/coverage.html",[890,3.566]],["body/coverage.html",[0,0.985,1,0.97,8,0.3,9,2.866,26,0.033,29,0.224,86,1.365,146,1.057,148,1.057,151,1.057,153,1.151,155,0.97,157,1.057,159,1.057,161,1.057,165,0.023,166,0.023,168,2.866,173,1.253,184,0.557,269,2.206,293,2.42,294,2.488,296,2.866,297,2.866,352,1.792,354,2.206,370,1.98,387,2.206,393,1.792,401,2.206,404,1.98,409,1.792,442,2.866,443,2.866,466,2.211,468,3.272,492,2.866,501,2.206,505,1.792,532,2.866,533,2.866,599,2.488,640,2.866,652,2.866,653,2.866,659,2.866,663,2.488,664,2.866,665,2.866,706,2.866,722,1.792,767,2.488,786,2.866,821,2.866,833,2.866,834,2.866,854,2.866,855,2.866,868,2.866,877,2.866,878,2.866,884,2.866,885,2.866,890,2.866,891,3.441,892,3.441,893,6.393,894,5.651,895,3.441,896,3.794,897,3.441,898,3.441,899,4.554,900,4.554,901,4.554,902,4.554,903,3.441,904,3.441,905,3.441,906,3.441,907,3.441,908,3.441,909,3.441,910,5.105,911,3.441,912,3.441,913,3.441,914,3.441]],["title/dependencies.html",[193,2.419,915,1.896]],["body/dependencies.html",[26,0.034,27,1.042,165,0.026,166,0.026,173,1.467,193,2.583,212,4.2,213,3.646,215,3.357,236,3.357,237,3.357,243,3.357,244,3.416,276,2.914,406,3.357,579,3.357,802,3.357,842,2.914,916,4.03,917,5.22,918,4.03,919,5.042,920,4.03,921,4.03,922,4.03,923,4.03,924,4.03,925,4.03,926,4.03,927,4.03,928,4.03,929,4.03,930,4.03,931,4.03,932,4.03,933,4.03,934,4.03,935,4.03,936,4.03,937,4.03,938,4.03,939,4.03,940,4.03,941,4.03,942,4.03,943,4.03,944,4.03,945,4.03,946,4.03,947,4.03]],["title/index.html",[181,0.424,948,2.622,949,2.622]],["body/index.html",[0,0.875,4,0.339,12,1.298,26,0.025,85,3.233,86,1.54,93,4.101,119,4.505,136,3.233,144,0.695,165,0.025,166,0.025,170,2.816,205,2.806,340,4.101,510,4.997,682,3.233,717,3.233,842,2.806,915,2.806,917,3.233,950,3.88,951,3.88,952,5.408,953,3.233,954,5.87,955,6.093,956,3.88,957,3.88,958,3.88,959,3.88,960,3.88,961,3.88,962,3.88,963,3.88,964,3.88,965,5.408,966,5.408,967,3.88,968,5.687,969,3.88,970,3.88,971,3.88,972,4.923,973,4.923,974,5.687,975,4.923,976,4.923,977,3.88,978,3.88,979,3.88,980,3.88,981,4.923,982,3.88,983,3.88,984,3.88,985,3.88,986,3.88,987,3.88,988,3.88,989,3.88,990,3.88,991,2.806,992,3.88,993,3.88]],["title/modules.html",[192,2.463]],["body/modules.html",[26,0.029,132,3.568,165,0.029,166,0.029,191,3.163,192,2.839,202,2.839,213,3.568,994,4.934,995,4.934,996,5.695,997,4.934]],["title/overview.html",[991,3.096]],["body/overview.html",[1,1.535,2,1.562,26,0.033,138,1.433,146,1.877,148,1.672,151,1.672,153,1.82,155,1.535,157,1.672,159,1.672,161,1.672,165,0.026,166,0.026,190,2.522,191,4.186,192,2.264,193,2.522,194,3.278,195,3.278,196,3.278,197,2.846,198,3.278,199,3.278,200,3.278,201,3.278,202,3.132,203,3.592,204,3.278,205,2.846,275,2.522,295,2.522,441,1.705,467,2.522,991,2.846,998,3.935,999,3.935,1000,4.967,1001,3.935,1002,3.935]],["title/properties.html",[182,0.676,915,1.896]],["body/properties.html",[26,0.031,165,0.03,166,0.03,182,0.899,953,4.185,1003,5.023]],["title/routes.html",[275,2.744]],["body/routes.html",[26,0.03,165,0.03,166,0.03,275,3.249]],["title/miscellaneous/variables.html",[1004,2.184,1005,3.144]],["body/miscellaneous/variables.html",[26,0.029,165,0.029,166,0.029,181,0.801,244,2.848,709,3.172,767,4.125,896,4.123,1004,4.123,1005,4.123,1006,4.949]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1003,"title":{},"body":{"properties.html":{}}}],["0.1.3",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["0.14.2",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["0.9.2",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["00000",{"_index":552,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["1.13.12",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["1.9.4",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["1.9.8",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":783,"title":{},"body":{"components/MapComponent.html":{}}}],["10/10",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":737,"title":{},"body":{"components/MapComponent.html":{}}}],["14.5372",{"_index":759,"title":{},"body":{"components/MapComponent.html":{}}}],["15.0.0",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["17.0.0",{"_index":917,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.0.1",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":781,"title":{},"body":{"components/MapComponent.html":{}}}],["1st",{"_index":608,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["2",{"_index":998,"title":{},"body":{"overview.html":{}}}],["2.29.4",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":817,"title":{},"body":{"components/MenuComponent.html":{}}}],["25",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["2nd",{"_index":609,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["3",{"_index":1000,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1002,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["4th",{"_index":616,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["5.0.0",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":599,"title":{},"body":{"components/DialogLegendComponent.html":{},"components/MenuComponent.html":{},"coverage.html":{}}}],["53.4481",{"_index":758,"title":{},"body":{"components/MapComponent.html":{}}}],["6/6",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["65/65",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1001,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":819,"title":{},"body":{"components/MenuComponent.html":{}}}],["84",{"_index":555,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["9",{"_index":999,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["_router",{"_index":795,"title":{},"body":{"components/MenuComponent.html":{}}}],["about'},{'name",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["about.component.css",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["activities",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["actual_component",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["add",{"_index":984,"title":{},"body":{"index.html":{}}}],["added",{"_index":741,"title":{},"body":{"components/MapComponent.html":{}}}],["additional",{"_index":444,"title":{},"body":{"classes/CalendarDate.html":{},"components/MenuComponent.html":{},"classes/PollutionType.html":{},"classes/WeatherStability.html":{}}}],["additionally",{"_index":812,"title":{},"body":{"components/MenuComponent.html":{}}}],["addressing",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["adds",{"_index":732,"title":{},"body":{"components/MapComponent.html":{}}}],["adjustment",{"_index":635,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["adjusts",{"_index":813,"title":{},"body":{"components/MenuComponent.html":{}}}],["advantageous",{"_index":613,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["afterviewinit",{"_index":765,"title":{},"body":{"components/MapComponent.html":{},"components/PanelComponent.html":{}}}],["air",{"_index":547,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["aleksandrowice",{"_index":629,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["allows",{"_index":541,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["analyzed",{"_index":626,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["angular",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/BackendDataService.html":{}}}],["angular/compiler",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"injectables/ToggleService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/MenuComponent.html":{}}}],["angular/material/form",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slider",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenuComponent.html":{},"dependencies.html":{}}}],["api",{"_index":368,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["apis",{"_index":301,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["app",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["app.component",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":146,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":603,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"index.html":{}}}],["application's",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":191,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["approutingmodule",{"_index":202,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/DialogLegendComponent.html":{},"classes/PlumeData.html":{}}}],["areas",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["array",{"_index":336,"title":{},"body":{"injectables/BackendDataService.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{}}}],["artifacts",{"_index":969,"title":{},"body":{"index.html":{}}}],["associated",{"_index":472,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"injectables/LocalStorageService.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["asymmetrik/ngx",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["attribution",{"_index":743,"title":{},"body":{"components/MapComponent.html":{}}}],["authorities",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{}}}],["automatically",{"_index":960,"title":{},"body":{"index.html":{}}}],["available",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/DialogLegendComponent.html":{},"modules.html":{}}}],["backend",{"_index":300,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["backenddataservice",{"_index":294,"title":{"injectables/BackendDataService.html":{}},"body":{"injectables/BackendDataService.html":{},"coverage.html":{}}}],["bar",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["barriers",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{}}}],["base",{"_index":398,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["base_url",{"_index":306,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["based",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{}}}],["beta.42",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{}}}],["boolean",{"_index":456,"title":{},"body":{"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"injectables/LocalStorageService.html":{},"interfaces/Point.html":{},"injectables/ToggleService.html":{}}}],["bootstrap",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["both",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{}}}],["bound",{"_index":749,"title":{},"body":{"components/MapComponent.html":{}}}],["browse",{"_index":996,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":699,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["browser/animations",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":968,"title":{},"body":{"index.html":{}}}],["businesses",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["calculated",{"_index":846,"title":{},"body":{"classes/PlumeData.html":{}}}],["calculations",{"_index":637,"title":{},"body":{"components/DialogLegendComponent.html":{},"classes/PlumeData.html":{}}}],["calendar",{"_index":346,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"components/DialogLegendComponent.html":{}}}],["calendardate",{"_index":354,"title":{"classes/CalendarDate.html":{}},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"coverage.html":{}}}],["called",{"_index":747,"title":{},"body":{"components/MapComponent.html":{}}}],["calm",{"_index":597,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["canvas",{"_index":738,"title":{},"body":{"components/MapComponent.html":{}}}],["capabilities",{"_index":986,"title":{},"body":{"index.html":{}}}],["carbon",{"_index":565,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["category",{"_index":880,"title":{},"body":{"classes/VehicleGroup.html":{}}}],["cause",{"_index":621,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["center",{"_index":716,"title":{},"body":{"components/MapComponent.html":{}}}],["centered",{"_index":735,"title":{},"body":{"components/MapComponent.html":{}}}],["centroid",{"_index":721,"title":{},"body":{"components/MapComponent.html":{}}}],["ch",{"_index":572,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["challenge",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{}}}],["change",{"_index":962,"title":{},"body":{"index.html":{}}}],["changes",{"_index":814,"title":{},"body":{"components/MenuComponent.html":{}}}],["characterized",{"_index":595,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["check",{"_index":990,"title":{},"body":{"index.html":{}}}],["chemical",{"_index":563,"title":{},"body":{"components/DialogLegendComponent.html":{},"classes/PollutionType.html":{}}}],["choice",{"_index":980,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":550,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["cities",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{}}}],["city",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{}}}],["city.tostring",{"_index":436,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["class",{"_index":29,"title":{"classes/CalendarDate.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"coverage.html":{}}}],["classes",{"_index":441,"title":{},"body":{"classes/CalendarDate.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"overview.html":{}}}],["cli",{"_index":952,"title":{},"body":{"index.html":{}}}],["close",{"_index":639,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["cluster_appmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":567,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["code",{"_index":842,"title":{},"body":{"classes/PlumeData.html":{},"dependencies.html":{},"index.html":{}}}],["collection",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{}}}],["color",{"_index":474,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["combination",{"_index":577,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["command",{"_index":981,"title":{},"body":{"index.html":{}}}],["communities",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{}}}],["competitiveness",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"overview.html":{}}}],["compounds",{"_index":564,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["concentration",{"_index":605,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["concerns",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["condition",{"_index":601,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["conditions",{"_index":606,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["configuration",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DialogLegendComponent.html":{}}}],["configurations",{"_index":731,"title":{},"body":{"components/MapComponent.html":{}}}],["considered",{"_index":462,"title":{},"body":{"classes/CalendarDate.html":{}}}],["consistent",{"_index":669,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["const",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MapComponent.html":{}}}],["constructor",{"_index":316,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["constructor(day",{"_index":451,"title":{},"body":{"classes/CalendarDate.html":{}}}],["constructor(http",{"_index":317,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["constructor(id",{"_index":500,"title":{},"body":{"classes/Detector.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["constructor(latitude",{"_index":654,"title":{},"body":{"classes/GpsPoint.html":{}}}],["constructor(private",{"_index":414,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["constructor(public",{"_index":771,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["constructor(toggleservice",{"_index":726,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["constructor(vehicles",{"_index":837,"title":{},"body":{"classes/PlumeData.html":{}}}],["constructs",{"_index":453,"title":{},"body":{"classes/CalendarDate.html":{},"classes/GpsPoint.html":{},"classes/PlumeData.html":{},"classes/VehicleGroup.html":{}}}],["container",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["containing",{"_index":525,"title":{},"body":{"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"classes/VehicleGroup.html":{}}}],["contains",{"_index":545,"title":{},"body":{"components/DialogLegendComponent.html":{},"components/PanelComponent.html":{}}}],["contour",{"_index":393,"title":{"interfaces/Contour.html":{}},"body":{"injectables/BackendDataService.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{},"coverage.html":{}}}],["contours",{"_index":409,"title":{"interfaces/Contours.html":{}},"body":{"injectables/BackendDataService.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{},"coverage.html":{}}}],["control",{"_index":768,"title":{},"body":{"components/MapComponent.html":{}}}],["control.zoom",{"_index":769,"title":{},"body":{"components/MapComponent.html":{}}}],["converting",{"_index":691,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["conveys",{"_index":551,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["coordinate",{"_index":761,"title":{},"body":{"components/MapComponent.html":{}}}],["coordinates",{"_index":487,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"classes/GpsPoint.html":{},"interfaces/Point.html":{}}}],["copy",{"_index":784,"title":{},"body":{"components/MapComponent.html":{}}}],["copyright",{"_index":644,"title":{},"body":{"components/FooterComponent.html":{}}}],["corresponding",{"_index":685,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["country",{"_index":334,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{}}}],["country.tostring",{"_index":430,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["coverage",{"_index":890,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":713,"title":{},"body":{"components/MapComponent.html":{}}}],["creates",{"_index":503,"title":{},"body":{"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/MapComponent.html":{},"classes/WeatherStability.html":{}}}],["creating",{"_index":857,"title":{},"body":{"classes/PollutionType.html":{}}}],["curve",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"components/MapComponent.html":{},"classes/PlumeData.html":{},"classes/WeatherStability.html":{}}}],["data.service.ts",{"_index":297,"title":{},"body":{"injectables/BackendDataService.html":{},"coverage.html":{}}}],["data.service.ts:114",{"_index":357,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.service.ts:131",{"_index":388,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.service.ts:144",{"_index":345,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.service.ts:21",{"_index":319,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.service.ts:38",{"_index":380,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.service.ts:52",{"_index":365,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.service.ts:63",{"_index":363,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.service.ts:72",{"_index":338,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.service.ts:82",{"_index":374,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.service.ts:97",{"_index":330,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["data.ts",{"_index":834,"title":{},"body":{"classes/PlumeData.html":{},"coverage.html":{}}}],["data.ts:18",{"_index":852,"title":{},"body":{"classes/PlumeData.html":{}}}],["data.ts:19",{"_index":853,"title":{},"body":{"classes/PlumeData.html":{}}}],["data.ts:20",{"_index":850,"title":{},"body":{"classes/PlumeData.html":{}}}],["data.ts:21",{"_index":849,"title":{},"body":{"classes/PlumeData.html":{}}}],["data.ts:22",{"_index":848,"title":{},"body":{"classes/PlumeData.html":{}}}],["data.ts:23",{"_index":851,"title":{},"body":{"classes/PlumeData.html":{}}}],["data.ts:24",{"_index":847,"title":{},"body":{"classes/PlumeData.html":{}}}],["data.ts:4",{"_index":838,"title":{},"body":{"classes/PlumeData.html":{}}}],["data/dates",{"_index":440,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["date",{"_index":379,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"components/DialogLegendComponent.html":{},"classes/PlumeData.html":{}}}],["date.tostring",{"_index":420,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["date.ts",{"_index":443,"title":{},"body":{"classes/CalendarDate.html":{},"coverage.html":{}}}],["date.ts:10",{"_index":452,"title":{},"body":{"classes/CalendarDate.html":{}}}],["date.ts:21",{"_index":455,"title":{},"body":{"classes/CalendarDate.html":{}}}],["date.ts:22",{"_index":464,"title":{},"body":{"classes/CalendarDate.html":{}}}],["date.ts:23",{"_index":465,"title":{},"body":{"classes/CalendarDate.html":{}}}],["dates",{"_index":347,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["day",{"_index":447,"title":{},"body":{"classes/CalendarDate.html":{},"components/DialogLegendComponent.html":{}}}],["decimals",{"_index":553,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["declarations",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendDataService.html":{},"components/MapComponent.html":{},"injectables/ToggleService.html":{}}}],["defined",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["defines",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["defining",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["demonstration",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{}}}],["dependencies",{"_index":193,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depicting",{"_index":841,"title":{},"body":{"classes/PlumeData.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["design",{"_index":803,"title":{},"body":{"components/MenuComponent.html":{}}}],["details",{"_index":396,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/Detector.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["detected",{"_index":839,"title":{},"body":{"classes/PlumeData.html":{}}}],["detection",{"_index":835,"title":{},"body":{"classes/PlumeData.html":{}}}],["detector",{"_index":352,"title":{"classes/Detector.html":{}},"body":{"injectables/BackendDataService.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"classes/PlumeData.html":{},"coverage.html":{}}}],["detectorid",{"_index":383,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/PlumeData.html":{}}}],["detectorid.tostring",{"_index":418,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["detectors",{"_index":361,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{}}}],["dev",{"_index":957,"title":{},"body":{"index.html":{}}}],["development",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["device",{"_index":843,"title":{},"body":{"classes/PlumeData.html":{}}}],["devices",{"_index":549,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["dialog",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["dialoglegendcomponent",{"_index":148,"title":{"components/DialogLegendComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogs",{"_index":791,"title":{},"body":{"components/MenuComponent.html":{}}}],["different",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["directive",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["directives",{"_index":163,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":967,"title":{},"body":{"index.html":{}}}],["directory",{"_index":971,"title":{},"body":{"index.html":{}}}],["disadvantageous",{"_index":600,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["disordered",{"_index":610,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["dispersion",{"_index":548,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["displaying",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["dist",{"_index":970,"title":{},"body":{"index.html":{}}}],["distances",{"_index":623,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["distinguished",{"_index":588,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["distribution",{"_index":614,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["documentation",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["due",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{}}}],["duration",{"_index":476,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["dynamic",{"_index":579,"title":{},"body":{"components/DialogLegendComponent.html":{},"dependencies.html":{}}}],["e2e",{"_index":978,"title":{},"body":{"index.html":{}}}],["effectiveness",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{}}}],["efficiency",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{}}}],["element",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["elfalem/leaflet",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["emitters",{"_index":624,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["emitting",{"_index":377,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["end",{"_index":510,"title":{},"body":{"classes/Detector.html":{},"index.html":{}}}],["ending",{"_index":517,"title":{},"body":{"classes/Detector.html":{}}}],["endpoint",{"_index":369,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["ensuring",{"_index":754,"title":{},"body":{"components/MapComponent.html":{}}}],["entity",{"_index":858,"title":{},"body":{"classes/PollutionType.html":{}}}],["entry",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["environment",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["environmental",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"classes/PlumeData.html":{}}}],["error",{"_index":477,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["execute",{"_index":975,"title":{},"body":{"index.html":{}}}],["expanded",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{}}}],["expectations",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["export",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["exports",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extremely",{"_index":589,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["face",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{}}}],["factors",{"_index":580,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["false",{"_index":463,"title":{},"body":{"classes/CalendarDate.html":{}}}],["features",{"_index":792,"title":{},"body":{"components/MenuComponent.html":{}}}],["fetches",{"_index":331,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["fetching",{"_index":302,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["field",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"classes/VehicleGroup.html":{}}}],["fields",{"_index":560,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"coverage.html":{}}}],["files",{"_index":963,"title":{},"body":{"index.html":{}}}],["filter",{"_index":360,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["first",{"_index":983,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":806,"title":{},"body":{"components/MenuComponent.html":{}}}],["flag",{"_index":457,"title":{},"body":{"classes/CalendarDate.html":{}}}],["flexlayoutmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["flows",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{}}}],["footer",{"_index":641,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["footer.component.css",{"_index":643,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":642,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":151,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["footnotes",{"_index":860,"title":{},"body":{"classes/PollutionType.html":{}}}],["form",{"_index":546,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["form'},{'name",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["form/form.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["format",{"_index":762,"title":{},"body":{"components/MapComponent.html":{}}}],["formatted",{"_index":385,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["formcomponent",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formsmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["formula",{"_index":859,"title":{},"body":{"classes/PollutionType.html":{}}}],["freight",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["friendly",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["fulfil",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["full",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/PollutionType.html":{}}}],["fullwidth",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["functionality",{"_index":445,"title":{},"body":{"classes/CalendarDate.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{}}}],["further",{"_index":987,"title":{},"body":{"index.html":{}}}],["gap",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{}}}],["gaussian",{"_index":390,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/PlumeData.html":{}}}],["generate",{"_index":965,"title":{},"body":{"index.html":{}}}],["generated",{"_index":951,"title":{},"body":{"index.html":{}}}],["geographic",{"_index":656,"title":{},"body":{"classes/GpsPoint.html":{}}}],["geographical",{"_index":484,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"classes/GpsPoint.html":{},"components/MapComponent.html":{},"interfaces/Point.html":{}}}],["getbool",{"_index":672,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getbool(key",{"_index":678,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getcitydata",{"_index":307,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getcitydata(country",{"_index":328,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getcountrydata",{"_index":308,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getdates",{"_index":309,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getdates(topoid",{"_index":343,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getdetectordata",{"_index":310,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getdetectordata(country",{"_index":356,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getitem",{"_index":673,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":683,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getobject",{"_index":674,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getobject(key",{"_index":686,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getpollutiondata",{"_index":311,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getroadendpoint",{"_index":497,"title":{},"body":{"classes/Detector.html":{}}}],["getroadstartpoint",{"_index":498,"title":{},"body":{"classes/Detector.html":{}}}],["getstabilitydata",{"_index":312,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getstatedata",{"_index":313,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getstatedata(country",{"_index":373,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getting",{"_index":948,"title":{"index.html":{}},"body":{}}],["gettopodetectorpoint",{"_index":499,"title":{},"body":{"classes/Detector.html":{}}}],["getvehiclegroupsdata",{"_index":314,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["getvehiclegroupsdata(detectorid",{"_index":378,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["given",{"_index":375,"title":{},"body":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{}}}],["go",{"_index":989,"title":{},"body":{"index.html":{}}}],["gps",{"_index":506,"title":{},"body":{"classes/Detector.html":{},"classes/GpsPoint.html":{}}}],["gpspoint",{"_index":501,"title":{"classes/GpsPoint.html":{}},"body":{"classes/Detector.html":{},"classes/GpsPoint.html":{},"coverage.html":{}}}],["gradient",{"_index":583,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["graph",{"_index":997,"title":{},"body":{"modules.html":{}}}],["grass",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{}}}],["grassnext",{"_index":950,"title":{},"body":{"index.html":{}}}],["great",{"_index":622,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["green",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{}}}],["group",{"_index":382,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/VehicleGroup.html":{}}}],["group.ts",{"_index":878,"title":{},"body":{"classes/VehicleGroup.html":{},"coverage.html":{}}}],["group.ts:14",{"_index":882,"title":{},"body":{"classes/VehicleGroup.html":{}}}],["group.ts:15",{"_index":883,"title":{},"body":{"classes/VehicleGroup.html":{}}}],["group.ts:16",{"_index":881,"title":{},"body":{"classes/VehicleGroup.html":{}}}],["group.ts:4",{"_index":879,"title":{},"body":{"classes/VehicleGroup.html":{}}}],["groups",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{}}}],["handled",{"_index":825,"title":{},"body":{"components/PanelComponent.html":{}}}],["handling",{"_index":326,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["help",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["helpful",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{}}}],["hide",{"_index":543,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["high",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/DialogLegendComponent.html":{}}}],["home",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{}}}],["home'},{'name",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["home.component.css",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":155,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":746,"title":{},"body":{"components/MapComponent.html":{}}}],["hostlistener",{"_index":831,"title":{},"body":{"components/PanelComponent.html":{}}}],["html",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/VehicleGroup.html":{}}}],["http",{"_index":321,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["http://localhost:4200",{"_index":959,"title":{},"body":{"index.html":{}}}],["http://localhost:8787/api",{"_index":397,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["httpclient",{"_index":318,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["httpclientmodule",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["httpparams",{"_index":400,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["hydrocarbons",{"_index":571,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["i.e",{"_index":581,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["icon",{"_index":540,"title":{},"body":{"components/DialogLegendComponent.html":{},"classes/VehicleGroup.html":{}}}],["icons",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":349,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["identifier",{"_index":505,"title":{},"body":{"classes/Detector.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"coverage.html":{}}}],["imgw",{"_index":627,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["impact",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["impacts",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{}}}],["implementation",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["implementing",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{}}}],["implements",{"_index":717,"title":{},"body":{"components/MapComponent.html":{},"index.html":{}}}],["import",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"injectables/ToggleService.html":{}}}],["imports",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["including",{"_index":714,"title":{},"body":{"components/MapComponent.html":{}}}],["increase",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{}}}],["independent",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{}}}],["index",{"_index":181,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":458,"title":{},"body":{"classes/CalendarDate.html":{},"classes/PlumeData.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["information",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"classes/PlumeData.html":{}}}],["initialization",{"_index":752,"title":{},"body":{"components/MapComponent.html":{}}}],["initialized",{"_index":748,"title":{},"body":{"components/MapComponent.html":{}}}],["initializes",{"_index":730,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["initializing",{"_index":708,"title":{},"body":{"components/MapComponent.html":{}}}],["initmap",{"_index":724,"title":{},"body":{"components/MapComponent.html":{}}}],["injectable",{"_index":293,"title":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{},"injectables/ToggleService.html":{}},"body":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{},"injectables/ToggleService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":875,"title":{},"body":{"injectables/ToggleService.html":{}}}],["injectables",{"_index":295,"title":{},"body":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{},"injectables/ToggleService.html":{},"overview.html":{}}}],["input",{"_index":832,"title":{},"body":{"components/PanelComponent.html":{}}}],["instance",{"_index":320,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["interact",{"_index":299,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["interacting",{"_index":787,"title":{},"body":{"components/MenuComponent.html":{}}}],["interaction",{"_index":824,"title":{},"body":{"components/PanelComponent.html":{}}}],["interface",{"_index":466,"title":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"components/DialogLegendComponent.html":{},"interfaces/Point.html":{},"coverage.html":{}}}],["interfaces",{"_index":467,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{},"overview.html":{}}}],["involve",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{}}}],["isolines",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["isselected",{"_index":448,"title":{},"body":{"classes/CalendarDate.html":{}}}],["item",{"_index":460,"title":{},"body":{"classes/CalendarDate.html":{},"injectables/LocalStorageService.html":{}}}],["json",{"_index":700,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":705,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":704,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["karma",{"_index":977,"title":{},"body":{"index.html":{}}}],["key",{"_index":681,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["knowledge",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{}}}],["l",{"_index":767,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["l.canvas",{"_index":778,"title":{},"body":{"components/MapComponent.html":{}}}],["l.latlngexpression",{"_index":757,"title":{},"body":{"components/MapComponent.html":{}}}],["l.map",{"_index":872,"title":{},"body":{"injectables/ToggleService.html":{}}}],["l.map('map",{"_index":776,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":779,"title":{},"body":{"components/MapComponent.html":{}}}],["large",{"_index":604,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["lat",{"_index":488,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"components/MapComponent.html":{},"interfaces/Point.html":{}}}],["latitude",{"_index":485,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"components/MapComponent.html":{},"interfaces/Point.html":{}}}],["latlngtuple",{"_index":518,"title":{},"body":{"classes/Detector.html":{}}}],["layer",{"_index":734,"title":{},"body":{"components/MapComponent.html":{}}}],["layout",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["leads",{"_index":602,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["leaflet",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"classes/Detector.html":{},"components/MapComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["leafletmodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":544,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["legend",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"overview.html":{}}}],["legend'},{'name",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["legend.component",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/MenuComponent.html":{}}}],["legend.component.css",{"_index":537,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["legend.component.html",{"_index":536,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["legend.component.ts",{"_index":533,"title":{},"body":{"components/DialogLegendComponent.html":{},"coverage.html":{}}}],["legend/dialog",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/MenuComponent.html":{},"coverage.html":{}}}],["level",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"components/MapComponent.html":{},"interfaces/Point.html":{}}}],["levels",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{}}}],["library",{"_index":712,"title":{},"body":{"components/MapComponent.html":{}}}],["lifecycle",{"_index":745,"title":{},"body":{"components/MapComponent.html":{}}}],["limits",{"_index":742,"title":{},"body":{"components/MapComponent.html":{}}}],["line",{"_index":469,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["list",{"_index":332,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{}}}],["lng",{"_index":763,"title":{},"body":{"components/MapComponent.html":{}}}],["local",{"_index":667,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage",{"_index":680,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.getitem(key",{"_index":702,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":701,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":663,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["location",{"_index":359,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{}}}],["location/cities",{"_index":434,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["location/countries",{"_index":428,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["location/states",{"_index":431,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["locationname",{"_index":493,"title":{},"body":{"classes/Detector.html":{}}}],["logic",{"_index":822,"title":{},"body":{"components/PanelComponent.html":{}}}],["logistics",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{}}}],["lon",{"_index":489,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["longitude",{"_index":486,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"components/MapComponent.html":{},"interfaces/Point.html":{}}}],["looking",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["machine",{"_index":646,"title":{},"body":{"components/FooterComponent.html":{}}}],["main",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{}}}],["making",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{}}}],["manage",{"_index":666,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{}}}],["management",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{}}}],["managing",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"injectables/ToggleService.html":{}}}],["manner",{"_index":671,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["many",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["map",{"_index":709,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{},"injectables/ToggleService.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":158,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["map.component.css",{"_index":720,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.html",{"_index":719,"title":{},"body":{"components/MapComponent.html":{}}}],["map/map.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["mapcomponent",{"_index":157,"title":{"components/MapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marking",{"_index":507,"title":{},"body":{"classes/Detector.html":{}}}],["matbuttonmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":362,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["matching",{"_index":166,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":799,"title":{},"body":{"components/MenuComponent.html":{}}}],["matdialogmodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":802,"title":{},"body":{"components/MenuComponent.html":{},"dependencies.html":{}}}],["matformfieldmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbarmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["maxzoom",{"_index":780,"title":{},"body":{"components/MapComponent.html":{}}}],["measured",{"_index":633,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["measurement",{"_index":394,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{}}}],["measures",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["meet",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["menu",{"_index":539,"title":{},"body":{"components/DialogLegendComponent.html":{},"components/MenuComponent.html":{}}}],["menu's",{"_index":788,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'name",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["menu.component.css",{"_index":794,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.html",{"_index":793,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["menucomponent",{"_index":159,"title":{"components/MenuComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["met",{"_index":607,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["metadata",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["method",{"_index":750,"title":{},"body":{"components/MapComponent.html":{}}}],["methods",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{},"classes/Detector.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"injectables/ToggleService.html":{}}}],["minzoom",{"_index":782,"title":{},"body":{"components/MapComponent.html":{}}}],["miscellaneous",{"_index":1004,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{}}}],["model/calendar",{"_index":411,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["model/contours",{"_index":410,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["model/detector",{"_index":407,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["model/plume",{"_index":408,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["model/pollution",{"_index":405,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["model/vehicle",{"_index":402,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["model/weather",{"_index":403,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["moderately",{"_index":591,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["module",{"_index":190,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":192,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["monoxide",{"_index":566,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["month",{"_index":449,"title":{},"body":{"classes/CalendarDate.html":{}}}],["more",{"_index":988,"title":{},"body":{"index.html":{}}}],["more_vert",{"_index":820,"title":{},"body":{"components/MenuComponent.html":{}}}],["movement",{"_index":575,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["movements",{"_index":611,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["msg",{"_index":478,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["multiple",{"_index":632,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["municipalities",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{}}}],["name",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"index.html":{}}}],["names",{"_index":337,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["navigate",{"_index":958,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenuComponent.html":{}}}],["necessary",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{}}}],["need",{"_index":982,"title":{},"body":{"index.html":{}}}],["needed",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{}}}],["negative",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{}}}],["neutral",{"_index":593,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["new",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"classes/GpsPoint.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/VehicleGroup.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{}}}],["ng",{"_index":955,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":725,"title":{},"body":{"components/MapComponent.html":{}}}],["nitrogen",{"_index":568,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["nowadays",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["nox",{"_index":570,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["number",{"_index":344,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"classes/GpsPoint.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["numeric",{"_index":840,"title":{},"body":{"classes/PlumeData.html":{}}}],["o.o",{"_index":651,"title":{},"body":{"components/FooterComponent.html":{}}}],["object",{"_index":454,"title":{},"body":{"classes/CalendarDate.html":{},"injectables/LocalStorageService.html":{}}}],["objectives",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["objects",{"_index":355,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["observable",{"_index":376,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["obtained",{"_index":371,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["occur",{"_index":612,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["occurring",{"_index":630,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["occurs",{"_index":615,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["one",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/DialogLegendComponent.html":{}}}],["oninit",{"_index":718,"title":{},"body":{"components/MapComponent.html":{},"components/PanelComponent.html":{}}}],["open",{"_index":790,"title":{},"body":{"components/MenuComponent.html":{}}}],["opendialog",{"_index":796,"title":{},"body":{"components/MenuComponent.html":{}}}],["opendialogphone",{"_index":797,"title":{},"body":{"components/MenuComponent.html":{}}}],["opened",{"_index":870,"title":{},"body":{"injectables/ToggleService.html":{}}}],["opens",{"_index":805,"title":{},"body":{"components/MenuComponent.html":{}}}],["openstreetmap",{"_index":740,"title":{},"body":{"components/MapComponent.html":{}}}],["operation",{"_index":491,"title":{},"body":{"interfaces/Contours.html":{}}}],["operations",{"_index":327,"title":{},"body":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{}}}],["optional",{"_index":324,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["out",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":766,"title":{},"body":{"components/MapComponent.html":{},"components/PanelComponent.html":{}}}],["overview",{"_index":991,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oxides",{"_index":569,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["package",{"_index":915,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":993,"title":{},"body":{"index.html":{}}}],["pair",{"_index":696,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["panel",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["panel's",{"_index":823,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.css",{"_index":828,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.html",{"_index":827,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel/panel.component",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["panelcomponent",{"_index":161,"title":{"components/PanelComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":413,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["parameter",{"_index":576,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["parameters",{"_index":323,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"classes/GpsPoint.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["params",{"_index":424,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["path",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paths",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":751,"title":{},"body":{"components/MapComponent.html":{}}}],["performed",{"_index":638,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["period",{"_index":557,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["periods",{"_index":598,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["planning",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{}}}],["plans",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{}}}],["platform",{"_index":979,"title":{},"body":{"index.html":{}}}],["plume",{"_index":391,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/PlumeData.html":{}}}],["plume/measurement",{"_index":438,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["plumedata",{"_index":387,"title":{"classes/PlumeData.html":{}},"body":{"injectables/BackendDataService.html":{},"classes/PlumeData.html":{},"coverage.html":{}}}],["point",{"_index":173,"title":{"interfaces/Point.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"components/MapComponent.html":{},"interfaces/Point.html":{},"coverage.html":{},"dependencies.html":{}}}],["point.ts",{"_index":653,"title":{},"body":{"classes/GpsPoint.html":{},"coverage.html":{}}}],["point.ts:13",{"_index":657,"title":{},"body":{"classes/GpsPoint.html":{}}}],["point.ts:14",{"_index":658,"title":{},"body":{"classes/GpsPoint.html":{}}}],["point.ts:4",{"_index":655,"title":{},"body":{"classes/GpsPoint.html":{}}}],["points",{"_index":471,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["pollution",{"_index":364,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{}}}],["pollutiontype",{"_index":404,"title":{"classes/PollutionType.html":{}},"body":{"injectables/BackendDataService.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"coverage.html":{}}}],["polska",{"_index":648,"title":{},"body":{"components/FooterComponent.html":{}}}],["polylinedecorator",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["positions",{"_index":483,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["posted",{"_index":395,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["postgaussianplumedata",{"_index":315,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["postgaussianplumedata(plumedata",{"_index":386,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["posting",{"_index":303,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["predefined",{"_index":736,"title":{},"body":{"components/MapComponent.html":{}}}],["preparing",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{}}}],["private",{"_index":723,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{}}}],["process",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{}}}],["processes",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{}}}],["processing",{"_index":392,"title":{},"body":{"injectables/BackendDataService.html":{},"interfaces/Contours.html":{}}}],["project",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["properly",{"_index":756,"title":{},"body":{"components/MapComponent.html":{}}}],["properties",{"_index":182,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"properties.html":{}}}],["property",{"_index":479,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["provided",{"_index":333,"title":{},"body":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{},"components/PanelComponent.html":{}}}],["providedin",{"_index":412,"title":{},"body":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{}}}],["providers",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":534,"title":{},"body":{"components/DialogLegendComponent.html":{},"components/MenuComponent.html":{}}}],["providing",{"_index":862,"title":{},"body":{"classes/PollutionType.html":{},"classes/VehicleGroup.html":{}}}],["public",{"_index":446,"title":{},"body":{"classes/CalendarDate.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["queryparams",{"_index":416,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["queryparams.append('city",{"_index":435,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["queryparams.append('country",{"_index":429,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["queryparams.append('date",{"_index":419,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["queryparams.append('detectorid",{"_index":417,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["queryparams.append('state",{"_index":432,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["queryparams.append('time",{"_index":421,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["queryparams.append('topoid",{"_index":439,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["reactiveformsmodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["realized",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["recent",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["record",{"_index":864,"title":{},"body":{"classes/PollutionType.html":{}}}],["redirects",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirectto",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduce",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["reduction",{"_index":625,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["reference",{"_index":992,"title":{},"body":{"index.html":{}}}],["refers",{"_index":573,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["related",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{},"components/MenuComponent.html":{},"classes/PlumeData.html":{}}}],["relatively",{"_index":619,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["relevant",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"classes/Detector.html":{}}}],["reload",{"_index":961,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":739,"title":{},"body":{"components/MapComponent.html":{}}}],["rendering",{"_index":707,"title":{},"body":{"components/MapComponent.html":{}}}],["representation",{"_index":481,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"injectables/LocalStorageService.html":{},"interfaces/Point.html":{}}}],["represented",{"_index":844,"title":{},"body":{"classes/PlumeData.html":{}}}],["representing",{"_index":342,"title":{},"body":{"injectables/BackendDataService.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"classes/GpsPoint.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/WeatherStability.html":{}}}],["represents",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["requests",{"_index":322,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["reset",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":372,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["responsible",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"injectables/ToggleService.html":{}}}],["result",{"_index":490,"title":{},"body":{"interfaces/Contours.html":{}}}],["results",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":384,"title":{},"body":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{}}}],["retrieved",{"_index":353,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/PlumeData.html":{}}}],["retrieves",{"_index":339,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/Detector.html":{},"injectables/LocalStorageService.html":{}}}],["return",{"_index":415,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/Detector.html":{},"injectables/LocalStorageService.html":{},"components/MenuComponent.html":{}}}],["returns",{"_index":335,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/Detector.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"injectables/ToggleService.html":{}}}],["reusable",{"_index":670,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/PanelComponent.html":{}}}],["road",{"_index":509,"title":{},"body":{"classes/Detector.html":{}}}],["road's",{"_index":520,"title":{},"body":{"classes/Detector.html":{}}}],["roadendcoordinates",{"_index":494,"title":{},"body":{"classes/Detector.html":{}}}],["roadstartcoordinates",{"_index":495,"title":{},"body":{"classes/Detector.html":{}}}],["root",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{},"injectables/ToggleService.html":{}}}],["root'},{'name",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["router",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenuComponent.html":{}}}],["routermodule",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":275,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MenuComponent.html":{}}}],["routing.module",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":954,"title":{},"body":{"index.html":{}}}],["running",{"_index":972,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":406,"title":{},"body":{"injectables/BackendDataService.html":{},"dependencies.html":{}}}],["same",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["scaffolding",{"_index":964,"title":{},"body":{"index.html":{}}}],["section",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["selected",{"_index":459,"title":{},"body":{"classes/CalendarDate.html":{}}}],["selection",{"_index":631,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["selector",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["sends",{"_index":389,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["serve",{"_index":956,"title":{},"body":{"index.html":{}}}],["server",{"_index":340,"title":{},"body":{"injectables/BackendDataService.html":{},"index.html":{}}}],["serves",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["service",{"_index":298,"title":{},"body":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"injectables/ToggleService.html":{}}}],["services/toggle.service",{"_index":770,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["set",{"_index":558,"title":{},"body":{"components/DialogLegendComponent.html":{},"components/MapComponent.html":{}}}],["setbool",{"_index":675,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setbool(key",{"_index":688,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem",{"_index":676,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":694,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setobject",{"_index":677,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setobject(key",{"_index":697,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{}}}],["settimeout",{"_index":772,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{}}}],["settings",{"_index":538,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["shape",{"_index":470,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["share",{"_index":617,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["show",{"_index":542,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["sidenav",{"_index":789,"title":{},"body":{"components/MenuComponent.html":{},"components/PanelComponent.html":{},"injectables/ToggleService.html":{}}}],["significant",{"_index":596,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["significantly",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{}}}],["simplified",{"_index":863,"title":{},"body":{"classes/PollutionType.html":{}}}],["six",{"_index":586,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["size",{"_index":636,"title":{},"body":{"components/DialogLegendComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{}}}],["slider",{"_index":634,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["slightly",{"_index":592,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["small",{"_index":620,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["smart",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{}}}],["social",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{}}}],["solutions",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"classes/GpsPoint.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"index.html":{}}}],["sp",{"_index":649,"title":{},"body":{"components/FooterComponent.html":{}}}],["specific",{"_index":473,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["specified",{"_index":358,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"components/DialogLegendComponent.html":{},"classes/GpsPoint.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"classes/VehicleGroup.html":{}}}],["specifies",{"_index":760,"title":{},"body":{"components/MapComponent.html":{}}}],["speed",{"_index":585,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["spinner",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../form.component.ts",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/about/about.component.ts",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/dialog",{"_index":532,"title":{},"body":{"components/DialogLegendComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts",{"_index":640,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/form/form.component.ts",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/home.component.ts",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/map/map.component.ts",{"_index":706,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map.component.ts:23",{"_index":727,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map.component.ts:31",{"_index":764,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map.component.ts:38",{"_index":744,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map.component.ts:51",{"_index":729,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/menu/menu.component.ts",{"_index":786,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/menu/menu.component.ts:16",{"_index":800,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:24",{"_index":815,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:32",{"_index":809,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:43",{"_index":804,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:54",{"_index":808,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/model/calendar",{"_index":442,"title":{},"body":{"classes/CalendarDate.html":{},"coverage.html":{}}}],["src/app/model/contours.ts",{"_index":468,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{},"coverage.html":{}}}],["src/app/model/detector.ts",{"_index":492,"title":{},"body":{"classes/Detector.html":{},"coverage.html":{}}}],["src/app/model/detector.ts:18",{"_index":511,"title":{},"body":{"classes/Detector.html":{}}}],["src/app/model/detector.ts:19",{"_index":512,"title":{},"body":{"classes/Detector.html":{}}}],["src/app/model/detector.ts:20",{"_index":515,"title":{},"body":{"classes/Detector.html":{}}}],["src/app/model/detector.ts:21",{"_index":514,"title":{},"body":{"classes/Detector.html":{}}}],["src/app/model/detector.ts:22",{"_index":513,"title":{},"body":{"classes/Detector.html":{}}}],["src/app/model/detector.ts:30",{"_index":523,"title":{},"body":{"classes/Detector.html":{}}}],["src/app/model/detector.ts:39",{"_index":521,"title":{},"body":{"classes/Detector.html":{}}}],["src/app/model/detector.ts:49",{"_index":516,"title":{},"body":{"classes/Detector.html":{}}}],["src/app/model/detector.ts:7",{"_index":502,"title":{},"body":{"classes/Detector.html":{}}}],["src/app/model/gps",{"_index":652,"title":{},"body":{"classes/GpsPoint.html":{},"coverage.html":{}}}],["src/app/model/plume",{"_index":833,"title":{},"body":{"classes/PlumeData.html":{},"coverage.html":{}}}],["src/app/model/pollution",{"_index":854,"title":{},"body":{"classes/PollutionType.html":{},"coverage.html":{}}}],["src/app/model/vehicle",{"_index":877,"title":{},"body":{"classes/VehicleGroup.html":{},"coverage.html":{}}}],["src/app/model/weather",{"_index":884,"title":{},"body":{"classes/WeatherStability.html":{},"coverage.html":{}}}],["src/app/panel/panel.component.ts",{"_index":821,"title":{},"body":{"components/PanelComponent.html":{},"coverage.html":{}}}],["src/app/panel/panel.component.ts:15",{"_index":829,"title":{},"body":{"components/PanelComponent.html":{}}}],["src/app/panel/panel.component.ts:21",{"_index":830,"title":{},"body":{"components/PanelComponent.html":{}}}],["src/app/services/backend",{"_index":296,"title":{},"body":{"injectables/BackendDataService.html":{},"coverage.html":{}}}],["src/app/services/local",{"_index":664,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/services/toggle.service.ts",{"_index":868,"title":{},"body":{"injectables/ToggleService.html":{},"coverage.html":{}}}],["src/app/services/toggle.service.ts:10",{"_index":873,"title":{},"body":{"injectables/ToggleService.html":{}}}],["src/app/services/toggle.service.ts:12",{"_index":871,"title":{},"body":{"injectables/ToggleService.html":{}}}],["src/app/services/toggle.service.ts:9",{"_index":874,"title":{},"body":{"injectables/ToggleService.html":{}}}],["stabilities",{"_index":427,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{}}}],["stability",{"_index":366,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"classes/PlumeData.html":{},"classes/WeatherStability.html":{}}}],["stability.ts",{"_index":885,"title":{},"body":{"classes/WeatherStability.html":{},"coverage.html":{}}}],["stability.ts:15",{"_index":888,"title":{},"body":{"classes/WeatherStability.html":{}}}],["stability.ts:16",{"_index":889,"title":{},"body":{"classes/WeatherStability.html":{}}}],["stability.ts:17",{"_index":887,"title":{},"body":{"classes/WeatherStability.html":{}}}],["stability.ts:5",{"_index":886,"title":{},"body":{"classes/WeatherStability.html":{}}}],["stable",{"_index":594,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["stakeholders",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["standard",{"_index":556,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["start",{"_index":508,"title":{},"body":{"classes/Detector.html":{}}}],["started",{"_index":949,"title":{"index.html":{}},"body":{}}],["starting",{"_index":522,"title":{},"body":{"classes/Detector.html":{}}}],["state",{"_index":329,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"components/DialogLegendComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"injectables/ToggleService.html":{}}}],["state.tostring",{"_index":433,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["statements",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":587,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["station",{"_index":628,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["still",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{}}}],["storage",{"_index":668,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts",{"_index":665,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:18",{"_index":695,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:28",{"_index":684,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:39",{"_index":689,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:49",{"_index":679,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:60",{"_index":698,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:70",{"_index":687,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["stored",{"_index":682,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["stores",{"_index":690,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["string",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendDataService.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"injectables/LocalStorageService.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["string(value",{"_index":703,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strings",{"_index":341,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["structure",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["styles",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurl",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["styleurls",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["such",{"_index":753,"title":{},"body":{"components/MapComponent.html":{}}}],["sulp’s",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{}}}],["support",{"_index":994,"title":{},"body":{"modules.html":{}}}],["sustainability",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{}}}],["sustainable",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{}}}],["svg",{"_index":995,"title":{},"body":{"modules.html":{}}}],["system",{"_index":561,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["systems",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["table",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["technology",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{}}}],["telematics",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{}}}],["temperature",{"_index":582,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["terms",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{}}}],["test",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["testing",{"_index":985,"title":{},"body":{"index.html":{}}}],["tests",{"_index":974,"title":{},"body":{"index.html":{}}}],["textpath",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["textual",{"_index":861,"title":{},"body":{"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["thermal",{"_index":578,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["this.base_url",{"_index":426,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["this.centroid",{"_index":777,"title":{},"body":{"components/MapComponent.html":{}}}],["this.dialog.open(dialoglegendcomponent",{"_index":818,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.http.get",{"_index":425,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["this.http.get(this.base_url",{"_index":423,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["this.http.post",{"_index":437,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["this.initmap",{"_index":773,"title":{},"body":{"components/MapComponent.html":{}}}],["this.opened",{"_index":876,"title":{},"body":{"injectables/ToggleService.html":{}}}],["this.roadendcoordinates.latitude",{"_index":530,"title":{},"body":{"classes/Detector.html":{}}}],["this.roadendcoordinates.longitude",{"_index":531,"title":{},"body":{"classes/Detector.html":{}}}],["this.roadstartcoordinates.latitude",{"_index":528,"title":{},"body":{"classes/Detector.html":{}}}],["this.roadstartcoordinates.longitude",{"_index":529,"title":{},"body":{"classes/Detector.html":{}}}],["this.toggleservice.map",{"_index":775,"title":{},"body":{"components/MapComponent.html":{}}}],["this.toggleservice.map.invalidatesize",{"_index":774,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{}}}],["this.toggleservice.togglesidenav",{"_index":816,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.topodetectorcoordinates.latitude",{"_index":526,"title":{},"body":{"classes/Detector.html":{}}}],["this.topodetectorcoordinates.longitude",{"_index":527,"title":{},"body":{"classes/Detector.html":{}}}],["three",{"_index":562,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["threshold",{"_index":475,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["through",{"_index":826,"title":{},"body":{"components/PanelComponent.html":{}}}],["tile",{"_index":733,"title":{},"body":{"components/MapComponent.html":{}}}],["tiles",{"_index":715,"title":{},"body":{"components/MapComponent.html":{}}}],["tiles.addto(this.toggleservice.map",{"_index":785,"title":{},"body":{"components/MapComponent.html":{}}}],["time",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"classes/PlumeData.html":{}}}],["time.tostring",{"_index":422,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["title",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":728,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["toggleable",{"_index":869,"title":{},"body":{"injectables/ToggleService.html":{}}}],["toggles",{"_index":810,"title":{},"body":{"components/MenuComponent.html":{}}}],["toggleservice",{"_index":722,"title":{"injectables/ToggleService.html":{}},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"injectables/ToggleService.html":{},"coverage.html":{}}}],["togglesidenav",{"_index":798,"title":{},"body":{"components/MenuComponent.html":{},"injectables/ToggleService.html":{}}}],["toggling",{"_index":801,"title":{},"body":{"components/MenuComponent.html":{}}}],["took",{"_index":845,"title":{},"body":{"classes/PlumeData.html":{}}}],["tools",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{}}}],["topo",{"_index":351,"title":{},"body":{"injectables/BackendDataService.html":{},"classes/Detector.html":{}}}],["topodetector",{"_index":524,"title":{},"body":{"classes/Detector.html":{}}}],["topodetectorcoordinates",{"_index":496,"title":{},"body":{"classes/Detector.html":{}}}],["topoid",{"_index":350,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["topology",{"_index":348,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["traffic",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{}}}],["transport",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["tronic",{"_index":399,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["true",{"_index":461,"title":{},"body":{"classes/CalendarDate.html":{},"injectables/LocalStorageService.html":{},"injectables/ToggleService.html":{}}}],["tslib",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":519,"title":{},"body":{"classes/Detector.html":{}}}],["type",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendDataService.html":{},"classes/CalendarDate.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"classes/Detector.html":{},"components/DialogLegendComponent.html":{},"classes/GpsPoint.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"classes/PollutionType.html":{},"injectables/ToggleService.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{},"coverage.html":{}}}],["type.ts",{"_index":855,"title":{},"body":{"classes/PollutionType.html":{},"coverage.html":{}}}],["type.ts:14",{"_index":866,"title":{},"body":{"classes/PollutionType.html":{}}}],["type.ts:15",{"_index":867,"title":{},"body":{"classes/PollutionType.html":{}}}],["type.ts:16",{"_index":865,"title":{},"body":{"classes/PollutionType.html":{}}}],["type.ts:4",{"_index":856,"title":{},"body":{"classes/PollutionType.html":{}}}],["types",{"_index":305,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{}}}],["types/leaflet",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["under",{"_index":692,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["unique",{"_index":504,"title":{},"body":{"classes/Detector.html":{},"classes/PlumeData.html":{},"classes/PollutionType.html":{},"classes/VehicleGroup.html":{},"classes/WeatherStability.html":{}}}],["unit",{"_index":973,"title":{},"body":{"index.html":{}}}],["unstable",{"_index":590,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["up",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{}}}],["updated",{"_index":755,"title":{},"body":{"components/MapComponent.html":{}}}],["urban",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{}}}],["url",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendDataService.html":{}}}],["use",{"_index":966,"title":{},"body":{"index.html":{}}}],["used",{"_index":325,"title":{},"body":{"injectables/BackendDataService.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["usefulness",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["users",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"components/DialogLegendComponent.html":{}}}],["uses",{"_index":711,"title":{},"body":{"components/MapComponent.html":{}}}],["using",{"_index":559,"title":{},"body":{"components/DialogLegendComponent.html":{},"classes/GpsPoint.html":{},"components/MenuComponent.html":{}}}],["utilization",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{}}}],["utilizing",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{}}}],["value",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendDataService.html":{},"interfaces/Contour.html":{},"interfaces/Contours.html":{},"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"classes/PlumeData.html":{},"interfaces/Point.html":{},"injectables/ToggleService.html":{}}}],["var",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/DialogLegendComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["variable",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1005,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":304,"title":{},"body":{"injectables/BackendDataService.html":{}}}],["vehicle",{"_index":381,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"classes/VehicleGroup.html":{}}}],["vehiclegroup",{"_index":401,"title":{"classes/VehicleGroup.html":{}},"body":{"injectables/BackendDataService.html":{},"classes/VehicleGroup.html":{},"coverage.html":{}}}],["vehicles",{"_index":836,"title":{},"body":{"classes/PlumeData.html":{}}}],["version",{"_index":953,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":574,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["vertices",{"_index":482,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["via",{"_index":976,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":811,"title":{},"body":{"components/MenuComponent.html":{}}}],["vision",{"_index":647,"title":{},"body":{"components/FooterComponent.html":{}}}],["visual",{"_index":480,"title":{},"body":{"interfaces/Contour.html":{},"interfaces/Contours.html":{},"interfaces/Point.html":{}}}],["vitronic",{"_index":645,"title":{},"body":{"components/FooterComponent.html":{}}}],["void",{"_index":693,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/MapComponent.html":{},"components/MenuComponent.html":{},"injectables/ToggleService.html":{}}}],["weather",{"_index":367,"title":{},"body":{"injectables/BackendDataService.html":{},"components/DialogLegendComponent.html":{},"classes/PlumeData.html":{},"classes/WeatherStability.html":{}}}],["weatherstability",{"_index":370,"title":{"classes/WeatherStability.html":{}},"body":{"injectables/BackendDataService.html":{},"classes/PlumeData.html":{},"classes/WeatherStability.html":{},"coverage.html":{}}}],["web",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{}}}],["well",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["wgs",{"_index":554,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["width",{"_index":807,"title":{},"body":{"components/MenuComponent.html":{}}}],["wind",{"_index":584,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["window",{"_index":535,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["winds",{"_index":618,"title":{},"body":{"components/DialogLegendComponent.html":{}}}],["within",{"_index":710,"title":{},"body":{"components/MapComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{}}}],["year",{"_index":450,"title":{},"body":{"classes/CalendarDate.html":{}}}],["years",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["z",{"_index":650,"title":{},"body":{"components/FooterComponent.html":{}}}],["zone.js",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponent.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n    \n        Description\n    \n    \n        Represents the AboutComponent in the application.\nThis component is responsible for displaying information\nrelated to the \"About\" section of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n            \n                styleUrl\n                ./about.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Represents the AboutComponent in the application.\n * This component is responsible for displaying information\n * related to the \"About\" section of the application.\n *\n */\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrl: './about.component.css'\n})\nexport class AboutComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    GReen And SuStainable\n        – kNowledge EXpanded freight Transport in cities\n\n    \n\n    \n    Nowadays, urban areas face the challenge of making transport sustainable in environmental and competitiveness terms\n    while at the same time addressing social concerns. Due to that the municipalities, stakeholders and users of urban\n    freight transport are still looking for measures, which could reduce the negative impact of freight transport on city\n    environment. In recent years many activities have been realized in this area. However, to meet the high level of\n    efficiency and usefulness of sustainable, environmental friendly transport systems in cities, the appropriate, relevant\n    to the expectations of different stakeholders groups, implementation processes are needed. Due to that it is necessary\n    to test new independent methods and technology for data collection and data collection processes.\n    \n    \n    By doing this, the project GRASS-NEXT (GReen And SuStainable – kNowledge EXpanded freight Transport in cities) will\n    increase the effectiveness of planning processes on different management levels, based on SMART objectives and plans.\n    The project will fulfil this gap by utilizing telematics solutions as well as utilization of web-based tools, which are\n    helpful for both businesses and authorities in the planning processes. The demonstration of data collection and data\n    collection systems will help to significantly increase the efficiency, sustainability and environmental impacts from\n    urban transport systems. Missing data on urban traffic flows is one of the barriers for planning and implementing\n    Sustainable Urban Logistics Plans (SULP’s). Better available data of traffic flows will help in the process to involve\n    the communities and different city users in the planning, implementation and development processes of preparing\n    Sustainable Urban Logistics Plans\n    \n\n    \n    \n\n    \n        \n        \n        \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    GReen And SuStainable        – kNowledge EXpanded freight Transport in cities            Nowadays, urban areas face the challenge of making transport sustainable in environmental and competitiveness terms    while at the same time addressing social concerns. Due to that the municipalities, stakeholders and users of urban    freight transport are still looking for measures, which could reduce the negative impact of freight transport on city    environment. In recent years many activities have been realized in this area. However, to meet the high level of    efficiency and usefulness of sustainable, environmental friendly transport systems in cities, the appropriate, relevant    to the expectations of different stakeholders groups, implementation processes are needed. Due to that it is necessary    to test new independent methods and technology for data collection and data collection processes.            By doing this, the project GRASS-NEXT (GReen And SuStainable – kNowledge EXpanded freight Transport in cities) will    increase the effectiveness of planning processes on different management levels, based on SMART objectives and plans.    The project will fulfil this gap by utilizing telematics solutions as well as utilization of web-based tools, which are    helpful for both businesses and authorities in the planning processes. The demonstration of data collection and data    collection systems will help to significantly increase the efficiency, sustainability and environmental impacts from    urban transport systems. Missing data on urban traffic flows is one of the barriers for planning and implementing    Sustainable Urban Logistics Plans (SULP’s). Better available data of traffic flows will help in the process to involve    the communities and different city users in the planning, implementation and development processes of preparing    Sustainable Urban Logistics Plans                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogLegendComponent', 'selector': 'app-dialog-legend'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        AppComponent is the root component of the Angular application.\nThis component serves as the entry point and the main container\nfor the application's UI.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'grass-next'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * AppComponent is the root component of the Angular application.\n * This component serves as the entry point and the main container\n * for the application's UI.\n *\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'grass-next';\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogLegendComponent', 'selector': 'app-dialog-legend'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogLegendComponent\n\nDialogLegendComponent\n\nAppModule -->\n\nDialogLegendComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nAppModule -->\n\nFormComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nAppModule -->\n\nPanelComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The AppModule class serves as the root module of the application.\nIt defines the main structure and dependencies for the application.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            DialogLegendComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            PanelComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomeComponent } from './home/home.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { MapComponent } from './map/map.component';\nimport { PanelComponent } from './panel/panel.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormComponent } from './form/form.component'\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\"\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DialogLegendComponent } from './dialog-legend/dialog-legend.component';\n\n/**\n * The AppModule class serves as the root module of the application.\n * It defines the main structure and dependencies for the application.\n *\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    FooterComponent,\n    MapComponent,\n    PanelComponent,\n    FormComponent,\n    AboutComponent,\n    HomeComponent,\n    DialogLegendComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    FlexLayoutModule,\n    MatSidenavModule,\n    MatSliderModule,\n    LeafletModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Router, RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { HomeComponent } from './home/home.component';\n\n/**\n * Defines the routes for the application.\n *\n */\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full' },\n  {path: \"home\", component: HomeComponent},\n  {path: \"about\", component: AboutComponent},\n  {path: '**', redirectTo: '/home', pathMatch: 'full'},\n]\n\n/**\n * AppRoutingModule is responsible for defining and managing the routing configuration\n * for the Angular application. It sets up the navigation and URL paths for the application.\n *\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendDataService.html":{"url":"injectables/BackendDataService.html","title":"injectable - BackendDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to interact with the backend APIs for fetching and posting various types of data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                BASE_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCityData\n                            \n                            \n                                getCountryData\n                            \n                            \n                                getDates\n                            \n                            \n                                getDetectorData\n                            \n                            \n                                getPollutionData\n                            \n                            \n                                getStabilityData\n                            \n                            \n                                getStateData\n                            \n                            \n                                getVehicleGroupsData\n                            \n                            \n                                postGaussianPlumeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend-data.service.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor for the class that sets up an HttpClient instance for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of the Angular HttpClient used for handling HTTP operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCityData\n                        \n                    \n                \n            \n            \n                \ngetCityData(country: String, state: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/backend-data.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Fetches the list of cities based on the provided country and state.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                country\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the country.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the state.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of city names.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCountryData\n                        \n                    \n                \n            \n            \n                \ngetCountryData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/backend-data.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of country from the server.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of strings representing country names.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDates\n                        \n                    \n                \n            \n            \n                \ngetDates(topoId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/backend-data.service.ts:144\n                        \n                    \n\n\n            \n                \n                        Fetches calendar dates based on the provided topology ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                topoId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the topo detector for which dates are to be retrieved.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of CalendarDate objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDetectorData\n                        \n                    \n                \n            \n            \n                \ngetDetectorData(country: String, state: String, city: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/backend-data.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Retrieves detector data based on the specified location parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                country\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe country to filter the detector data.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe state to filter the detector data.\n\n\n                                            \n                                        \n                                        \n                                                city\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe city to filter the detector data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of detectors that match the specified location parameters.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPollutionData\n                        \n                    \n                \n            \n            \n                \ngetPollutionData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/backend-data.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Fetches the pollution data from the server.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of pollution types.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStabilityData\n                        \n                    \n                \n            \n            \n                \ngetStabilityData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/backend-data.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Fetches stability data related to weather from the API endpoint.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of WeatherStability objects obtained from the API response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStateData\n                        \n                    \n                \n            \n            \n                \ngetStateData(country: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/backend-data.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Fetches the list of state for a given country.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                country\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the country for which the state is to be retrieved.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An observable emitting an array of state names.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVehicleGroupsData\n                        \n                    \n                \n            \n            \n                \ngetVehicleGroupsData(detectorId, date, time)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/backend-data.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Fetches vehicle group data based on the specified parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                detectorId\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the detector to retrieve the vehicle groups for.\n\n\n                                            \n                                        \n                                        \n                                                date\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe date for which to retrieve vehicle group data, formatted as a string.\n\n\n                                            \n                                        \n                                        \n                                                time\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe time for which to retrieve vehicle group data, formatted as a string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An array of vehicle groups.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postGaussianPlumeData\n                        \n                    \n                \n            \n            \n                \npostGaussianPlumeData(plumeData: PlumeData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/backend-data.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Sends the provided Gaussian plume data to the server for processing and retrieves contour information as a response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                plumeData\n                                            \n                                                            PlumeData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data representing the Gaussian plume measurement to be posted to the server.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The response with contour details.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8787/api/'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/backend-data.service.ts:21\n                        \n                    \n\n            \n                \n                    The base URL for the Green-Tronic API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { VehicleGroup } from \"../model/vehicle-group\";\nimport { WeatherStability } from \"../model/weather-stability\";\nimport { PollutionType } from \"../model/pollution-type\";\nimport { Observable } from \"rxjs\";\nimport { Detector } from \"../model/detector\";\nimport { PlumeData } from \"../model/plume-data\";\nimport { Contours } from \"../model/contours\";\nimport { CalendarDate } from \"../model/calendar-date\";\n\n/**\n * Service to interact with the backend APIs for fetching and posting various types of data.\n */\n@Injectable({ providedIn: 'root' })\nexport class BackendDataService {\n  /**\n   * The base URL for the Green-Tronic API.\n   *\n   */\n  BASE_URL: string = 'http://localhost:8787/api/';\n\n  /**\n   * Constructor for the class that sets up an HttpClient instance for making HTTP requests.\n   *\n   * @param {HttpClient} http An instance of the Angular HttpClient used for handling HTTP operations.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Fetches vehicle group data based on the specified parameters.\n   *\n   * @param {number} detectorId - The ID of the detector to retrieve the vehicle groups for.\n   * @param {string} date - The date for which to retrieve vehicle group data, formatted as a string.\n   * @param {string} time - The time for which to retrieve vehicle group data, formatted as a string.\n   * @return {VehicleGroup[]} An array of vehicle groups.\n   */\n  getVehicleGroupsData(detectorId, date, time): Observable {\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append('detectorId', detectorId.toString());\n    queryParams = queryParams.append('date', date.toString());\n    queryParams = queryParams.append('time', time.toString());\n\n    return this.http.get(this.BASE_URL + 'vehicle-groups', {params: queryParams});\n  }\n\n  /**\n   * Fetches stability data related to weather from the API endpoint.\n   *\n   * @return {WeatherStability[]} An array of WeatherStability objects obtained from the API response.\n   */\n  getStabilityData() {\n    return this.http.get(\n      this.BASE_URL + 'weather-stabilities'\n    );\n  }\n\n  /**\n   * Fetches the pollution data from the server.\n   *\n   * @return {PollutionType[]} An array of pollution types.\n   */\n  getPollutionData() {\n    return this.http.get(this.BASE_URL + 'pollution-types');\n  }\n\n  /**\n   * Retrieves a list of country from the server.\n   *\n   * @return {String[]} An array of strings representing country names.\n   */\n  getCountryData() {\n    return this.http.get(this.BASE_URL + 'location/countries');\n  }\n\n  /**\n   * Fetches the list of state for a given country.\n   *\n   * @param {String} country - The name of the country for which the state is to be retrieved.\n   * @return {String[]} An observable emitting an array of state names.\n   */\n  getStateData(country: String) {\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append('country', country.toString());\n    return this.http.get(this.BASE_URL + 'location/states', {\n      params: queryParams,\n    });\n  }\n\n  /**\n   * Fetches the list of cities based on the provided country and state.\n   *\n   * @param {String} country The name of the country.\n   * @param {String} state The name of the state.\n   * @return {String[]} An array of city names.\n   */\n  getCityData(country: String, state: String) {\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append('country', country.toString());\n    queryParams = queryParams.append('state', state.toString());\n    return this.http.get(this.BASE_URL + 'location/cities', {\n      params: queryParams,\n    });\n  }\n\n  /**\n   * Retrieves detector data based on the specified location parameters.\n   *\n   * @param {String} country - The country to filter the detector data.\n   * @param {String} state - The state to filter the detector data.\n   * @param {String} city - The city to filter the detector data.\n   * @return {Detector[]} An array of detectors that match the specified location parameters.\n   */\n  getDetectorData(country: String, state: String, city: String) {\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append('country', country.toString());\n    queryParams = queryParams.append('state', state.toString());\n    queryParams = queryParams.append('city', city.toString());\n\n    return this.http.get(this.BASE_URL + 'detectors/', {\n      params: queryParams,\n    });\n  }\n\n  /**\n   * Sends the provided Gaussian plume data to the server for processing and retrieves contour information as a response.\n   *\n   * @param {PlumeData} plumeData - The data representing the Gaussian plume measurement to be posted to the server.\n   * @return {Contours} The response with contour details.\n   */\n  postGaussianPlumeData(plumeData: PlumeData) {\n    return this.http.post(\n      this.BASE_URL + 'gaussian-plume/measurement',\n      plumeData\n    );\n  }\n\n  /**\n   * Fetches calendar dates based on the provided topology ID.\n   *\n   * @param {number} topoId - The ID of the topo detector for which dates are to be retrieved.\n   * @return {Observable} An array of CalendarDate objects.\n   */\n  getDates(topoId: number) {\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append('topoId', topoId);\n\n    return this.http.get(this.BASE_URL + 'data/dates', {\n      params: queryParams,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CalendarDate.html":{"url":"classes/CalendarDate.html","title":"class - CalendarDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CalendarDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/calendar-date.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a date in the calendar with additional functionality.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                day\n                            \n                            \n                                isSelected\n                            \n                            \n                                    Public\n                                month\n                            \n                            \n                                    Public\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(day: number, month: number, year: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/calendar-date.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs a new instance of a date object with the specified day, month, and year.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        day\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe day of the date.\n\n\n                                                        \n                                                \n                                                \n                                                        month\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe month of the date.\n\n\n                                                        \n                                                \n                                                \n                                                        year\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe year of the date.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/calendar-date.ts:21\n                        \n                    \n\n            \n                \n                    - The day of the date.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/calendar-date.ts:10\n                        \n                    \n\n            \n                \n                    A boolean flag indicating the selected state of an item.\nWhen true, the item is considered selected. When false, the item\nis not selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        month\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/calendar-date.ts:22\n                        \n                    \n\n            \n                \n                    - The month of the date.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/calendar-date.ts:23\n                        \n                    \n\n            \n                \n                    - The year of the date.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CalendarDate {\n  /**\n   * A boolean flag indicating the selected state of an item.\n   * When true, the item is considered selected. When false, the item\n   * is not selected.\n   */\n  isSelected: boolean;\n\n  /**\n   * Constructs a new instance of a date object with the specified day, month, and year.\n   *\n   * @param {number} day - The day of the date.\n   * @param {number} month - The month of the date.\n   * @param {number} year - The year of the date.\n   *\n   */\n  constructor(\n    public day: number,\n    public month: number,\n    public year: number\n) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contour.html":{"url":"interfaces/Contour.html","title":"interface - Contour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/contours.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a contour line or shape defined by points and associated with a specific color and threshold.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                                \n                                        \n                                            threshold\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:         Point[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Point[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        threshold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        threshold:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contours {\n  contours: Contour[];\n  duration: number;\n  error: boolean;\n  msg: string;\n}\n\n/**\n * Represents a contour line or shape defined by points and associated with a specific color and threshold.\n *\n * @property {string} color - The visual representation color of the contour.\n * @property {Point[]} points - An array of points defining the vertices or defining positions of the contour.\n * @property {string} threshold - A value representing the threshold level associated with the contour.\n *\n */\nexport interface Contour {\n  color: string;\n  points: Point[];\n  threshold: string;\n}\n\n/**\n * Represents a geographical point with latitude and longitude coordinates.\n *\n * @property {number} lat - The latitude of the point.\n * @property {number} lon - The longitude of the point.\n *\n */\nexport interface Point {\n  lat: number;\n  lon: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contours.html":{"url":"interfaces/Contours.html","title":"interface - Contours","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contours\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/contours.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the result of a contour processing operation.\n*\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contours\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contours:         Contour[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Contour[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contours {\n  contours: Contour[];\n  duration: number;\n  error: boolean;\n  msg: string;\n}\n\n/**\n * Represents a contour line or shape defined by points and associated with a specific color and threshold.\n *\n * @property {string} color - The visual representation color of the contour.\n * @property {Point[]} points - An array of points defining the vertices or defining positions of the contour.\n * @property {string} threshold - A value representing the threshold level associated with the contour.\n *\n */\nexport interface Contour {\n  color: string;\n  points: Point[];\n  threshold: string;\n}\n\n/**\n * Represents a geographical point with latitude and longitude coordinates.\n *\n * @property {number} lat - The latitude of the point.\n * @property {number} lon - The longitude of the point.\n *\n */\nexport interface Point {\n  lat: number;\n  lon: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detector.html":{"url":"classes/Detector.html","title":"class - Detector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/detector.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a topo detector with associated coordinates and properties.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                locationName\n                            \n                            \n                                    Public\n                                roadEndCoordinates\n                            \n                            \n                                    Public\n                                roadStartCoordinates\n                            \n                            \n                                    Public\n                                topoDetectorCoordinates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoadEndPoint\n                            \n                            \n                                getRoadStartPoint\n                            \n                            \n                                getTopoDetectorPoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, locationName: string, topoDetectorCoordinates: GpsPoint, roadStartCoordinates: GpsPoint, roadEndCoordinates: GpsPoint)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/detector.ts:7\n                            \n                        \n\n                \n                    \n                            Creates an instance of a location with relevant details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe unique identifier for the location.\n\n\n                                                        \n                                                \n                                                \n                                                        locationName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe name of the location.\n\n\n                                                        \n                                                \n                                                \n                                                        topoDetectorCoordinates\n                                                  \n                                                        \n                                                                        GpsPoint\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe GPS coordinates of the topo detector.\n\n\n                                                        \n                                                \n                                                \n                                                        roadStartCoordinates\n                                                  \n                                                        \n                                                                        GpsPoint\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe GPS coordinates marking the start of the road.\n\n\n                                                        \n                                                \n                                                \n                                                        roadEndCoordinates\n                                                  \n                                                        \n                                                                        GpsPoint\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe GPS coordinates marking the end of the road.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/detector.ts:18\n                        \n                    \n\n            \n                \n                    - The unique identifier for the location.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        locationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/detector.ts:19\n                        \n                    \n\n            \n                \n                    - The name of the location.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roadEndCoordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GpsPoint\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/detector.ts:22\n                        \n                    \n\n            \n                \n                    - The GPS coordinates marking the end of the road.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roadStartCoordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GpsPoint\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/detector.ts:21\n                        \n                    \n\n            \n                \n                    - The GPS coordinates marking the start of the road.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        topoDetectorCoordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GpsPoint\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/detector.ts:20\n                        \n                    \n\n            \n                \n                    - The GPS coordinates of the topo detector.\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRoadEndPoint\n                        \n                    \n                \n            \n            \n                \ngetRoadEndPoint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/model/detector.ts:49\n                        \n                    \n\n\n            \n                \n                        Retrieves the ending point of a road defined by its coordinates.\n*\n\n\n                        \n                            Returns :         LatLngTuple\n\n                        \n                            \n                                A tuple representing the latitude and longitude of the road's ending point.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoadStartPoint\n                        \n                    \n                \n            \n            \n                \ngetRoadStartPoint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/model/detector.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the starting point of a road defined by its coordinates.\n\n\n                        \n                            Returns :         LatLngTuple\n\n                        \n                            \n                                A tuple representing the latitude and longitude of the road's starting point.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopoDetectorPoint\n                        \n                    \n                \n            \n            \n                \ngetTopoDetectorPoint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/model/detector.ts:30\n                        \n                    \n\n\n            \n                \n                        Retrieves the geographical coordinates of the TopoDetector point.\n\n\n                        \n                            Returns :         LatLngTuple\n\n                        \n                            \n                                A tuple containing the latitude and longitude of the TopoDetector point.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LatLngTuple } from \"leaflet\";\nimport { GpsPoint } from \"./gps-point\";\n\n/**\n * Represents a topo detector with associated coordinates and properties.\n */\nexport class Detector {\n    /**\n     * Creates an instance of a location with relevant details.\n     *\n     * @param {number} id - The unique identifier for the location.\n     * @param {string} locationName - The name of the location.\n     * @param {GpsPoint} topoDetectorCoordinates - The GPS coordinates of the topo detector.\n     * @param {GpsPoint} roadStartCoordinates - The GPS coordinates marking the start of the road.\n     * @param {GpsPoint} roadEndCoordinates - The GPS coordinates marking the end of the road.\n     */\n    constructor(\n      public id: number,\n      public locationName: string,\n      public topoDetectorCoordinates: GpsPoint,\n      public roadStartCoordinates: GpsPoint,\n      public roadEndCoordinates: GpsPoint\n    ) {}\n\n    /**\n     * Retrieves the geographical coordinates of the TopoDetector point.\n     *\n     * @return {LatLngTuple} A tuple containing the latitude and longitude of the TopoDetector point.\n     */\n    getTopoDetectorPoint() : LatLngTuple {\n      return [this.topoDetectorCoordinates.latitude, this.topoDetectorCoordinates.longitude];\n    }\n\n    /**\n     * Retrieves the starting point of a road defined by its coordinates.\n     *\n     * @return {LatLngTuple} A tuple representing the latitude and longitude of the road's starting point.\n     */\n    getRoadStartPoint() : LatLngTuple {\n      return [this.roadStartCoordinates.latitude, this.roadStartCoordinates.longitude];\n    }\n\n    /**\n     * Retrieves the ending point of a road defined by its coordinates.\n     * *\n     * @return {LatLngTuple} A tuple representing the latitude and longitude of the road's ending point.\n     *\n     */\n    getRoadEndPoint() : LatLngTuple {\n      return [this.roadEndCoordinates.latitude, this.roadEndCoordinates.longitude];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogLegendComponent.html":{"url":"components/DialogLegendComponent.html","title":"component - DialogLegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogLegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog-legend/dialog-legend.component.ts\n\n\n\n    \n        Description\n    \n    \n        DialogLegendComponent is an Angular component that provides a dialog window containing a legend interface for\nthe main window of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-legend\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./dialog-legend.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-legend.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * DialogLegendComponent is an Angular component that provides a dialog window containing a legend interface for\n * the main window of the application.\n *\n */\n@Component({\n  selector: 'app-dialog-legend',\n  templateUrl: './dialog-legend.component.html',\n  styleUrl: './dialog-legend.component.css'\n})\nexport class DialogLegendComponent {\n\n}\n\n    \n\n    \n        Measurement settings description\n    \n    Menu icon\n    \n        \n        The menu icon allows users to show or hide the left configuration panel, which contains\n        a form with the air pollution dispersion parameters.\n    \n    Detector\n    \n        \n        The list of detectors contains all available devices for the chosen location (country, state, city). Every detector conveys information about its ID number (#00000)\n        and geographical coordinates in decimals (WGS 84 standard).\n    \n    Date and Time\n    \n        \n        The day and time period for measurement can be set by users using the calendar and time fields.\n    \n    Pollution Type\n    \n        \n        The system allows for the measurement of air pollution for three types of chemical compounds: carbon monoxide (CO),\n        nitrogen oxides (NOx), and hydrocarbons (CH).\n    \n    Weather stability\n    \n        \n        Weather stability refers to the vertical movement of air. Its parameter is a combination of thermal and dynamic factors, i.e.\n        temperature gradient and wind speed. Six weather stability states can be distinguished:\n        extremely unstable, moderately unstable, slightly unstable, neutral, slightly stable and moderately stable.\n    \n     \n        \n        Weather stability that is stable is characterized by a significant number of calm periods (about 50%). This creates a\n        disadvantageous condition for air pollution dispersion, which leads to the appearance of large pollution concentration\n        in these stability states.\n    \n    \n        \n        Disadvantageous air pollution dispersion conditions are also met in the 1st and 2nd states (extremely unstable and moderately unstable) when significant\n        disordered vertical air movements occur. \n    \n    \n        \n        The most advantageous air pollution distribution occurs for the 4th weather stability (neutral). The significant share\n        of high-speed winds and relatively small vertical air movements cause dispersion of air pollution at great distances\n        from the emitters, which leads to reduction of air pollution concentration.\n    \n    \n        \n        Weather stabilities for the specified location were analyzed based on data from the IMGW station in Aleksandrowice. The most often occurring weather stability has been neutral state.\n    \n    Vehicle types\n    \n        \n        This form field allows for the selection of one or multiple vehicle types, for which air pollution dispersion will be measured.\n    \n    Area slider\n    \n        \n        The area slider allows the adjustment of the size of the field, for which the calculations will be performed.\n    \n\n\n    Close\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Measurement settings description        Menu icon                    The menu icon allows users to show or hide the left configuration panel, which contains        a form with the air pollution dispersion parameters.        Detector                    The list of detectors contains all available devices for the chosen location (country, state, city). Every detector conveys information about its ID number (#00000)        and geographical coordinates in decimals (WGS 84 standard).        Date and Time                    The day and time period for measurement can be set by users using the calendar and time fields.        Pollution Type                    The system allows for the measurement of air pollution for three types of chemical compounds: carbon monoxide (CO),        nitrogen oxides (NOx), and hydrocarbons (CH).        Weather stability                    Weather stability refers to the vertical movement of air. Its parameter is a combination of thermal and dynamic factors, i.e.        temperature gradient and wind speed. Six weather stability states can be distinguished:        extremely unstable, moderately unstable, slightly unstable, neutral, slightly stable and moderately stable.                         Weather stability that is stable is characterized by a significant number of calm periods (about 50%). This creates a        disadvantageous condition for air pollution dispersion, which leads to the appearance of large pollution concentration        in these stability states.                        Disadvantageous air pollution dispersion conditions are also met in the 1st and 2nd states (extremely unstable and moderately unstable) when significant        disordered vertical air movements occur.                         The most advantageous air pollution distribution occurs for the 4th weather stability (neutral). The significant share        of high-speed winds and relatively small vertical air movements cause dispersion of air pollution at great distances        from the emitters, which leads to reduction of air pollution concentration.                        Weather stabilities for the specified location were analyzed based on data from the IMGW station in Aleksandrowice. The most often occurring weather stability has been neutral state.        Vehicle types                    This form field allows for the selection of one or multiple vehicle types, for which air pollution dispersion will be measured.        Area slider                    The area slider allows the adjustment of the size of the field, for which the calculations will be performed.        Close'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogLegendComponent', 'selector': 'app-dialog-legend'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogLegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        FooterComponent is a component that represents the footer section of an application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * FooterComponent is a component that represents the footer section of an application.\n *\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n    Copyright © VITRONIC Machine Vision Polska Sp. z o.o.\n\n\n    Copyright © VITRONIC Machine Vision Polska Sp. z o.o.\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Copyright © VITRONIC Machine Vision Polska Sp. z o.o.    Copyright © VITRONIC Machine Vision Polska Sp. z o.o.'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogLegendComponent', 'selector': 'app-dialog-legend'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GpsPoint.html":{"url":"classes/GpsPoint.html","title":"class - GpsPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GpsPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/gps-point.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a geographical point using GPS coordinates.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                latitude\n                            \n                            \n                                    Public\n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(latitude: number, longitude: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/gps-point.ts:4\n                            \n                        \n\n                \n                    \n                            Constructs a new instance with the specified latitude and longitude.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        latitude\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe geographic latitude.\n\n\n                                                        \n                                                \n                                                \n                                                        longitude\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe geographic longitude.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/gps-point.ts:13\n                        \n                    \n\n            \n                \n                    - The geographic latitude.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/gps-point.ts:14\n                        \n                    \n\n            \n                \n                    - The geographic longitude.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GpsPoint {\n    /**\n     * Constructs a new instance with the specified latitude and longitude.\n     *\n     * @param {number} latitude - The geographic latitude.\n     * @param {number} longitude - The geographic longitude.\n     *\n     */\n    constructor(\n      public latitude: number,\n      public longitude: number\n    ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Represents the home component in the application. Redirects to app-panel component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Represents the home component in the application. Redirects to app-panel component.\n *\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css'\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogLegendComponent', 'selector': 'app-dialog-legend'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage local storage operations in a consistent and reusable manner.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBool\n                            \n                            \n                                getItem\n                            \n                            \n                                getObject\n                            \n                            \n                                setBool\n                            \n                            \n                                setItem\n                            \n                            \n                                setObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBool\n                        \n                    \n                \n            \n            \n                \ngetBool(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/local-storage.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Retrieves a boolean value from localStorage based on the given key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key used to retrieve the stored boolean value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Retrieves an item from local storage based on the provided key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key corresponding to the item to retrieve from local storage.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getObject\n                        \n                    \n                \n            \n            \n                \ngetObject(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/local-storage.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Retrieves an object from local storage by its key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key associated with the object in local storage.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBool\n                        \n                    \n                \n            \n            \n                \nsetBool(key: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/local-storage.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Stores a boolean value in localStorage after converting it to a string representation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key under which the value will be stored in localStorage.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe boolean value to be stored.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/local-storage.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Stores a key-value pair in the local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key under which the value will be stored.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be stored.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setObject\n                        \n                    \n                \n            \n            \n                \nsetObject(key: string, value: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/local-storage.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Stores an object in the browser's local storage after converting it to a JSON string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key under which the object will be stored in local storage.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object to be stored in local storage.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service to manage local storage operations in a consistent and reusable manner.\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  /**\n   * Stores a key-value pair in the local storage.\n   *\n   * @param {string} key - The key under which the value will be stored.\n   * @param {any} value - The value to be stored.\n   *\n   */\n  setItem(key: string, value: any) {\n    localStorage.setItem(key, value);\n  }\n\n  /**\n   * Retrieves an item from local storage based on the provided key.\n   *\n   * @param {string} key - The key corresponding to the item to retrieve from local storage.\n   *\n   */\n  getItem(key: string): any {\n    return localStorage.getItem(key);\n  }\n\n  /**\n   * Stores a boolean value in localStorage after converting it to a string representation.\n   *\n   * @param {string} key - The key under which the value will be stored in localStorage.\n   * @param {boolean} value - The boolean value to be stored.\n   *\n   */\n  setBool(key: string, value: boolean) {\n    localStorage.setItem(key, String(value));\n  }\n\n  /**\n   * Retrieves a boolean value from localStorage based on the given key.\n   *\n   * @param {string} key - The key used to retrieve the stored boolean value.\n   *\n   */\n  getBool(key: string): boolean {\n    return localStorage.getItem(key) === 'true';\n  }\n\n  /**\n   * Stores an object in the browser's local storage after converting it to a JSON string.\n   *\n   * @param {string} key - The key under which the object will be stored in local storage.\n   * @param {object} value - The object to be stored in local storage.\n   *\n   */\n  setObject(key: string, value: object) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  /**\n   * Retrieves an object from local storage by its key.\n   *\n   * @param {string} key - The key associated with the object in local storage.\n   *\n   */\n  getObject(key: string): object {\n    return JSON.parse(localStorage.getItem(key));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map.component.ts\n\n\n\n    \n        Description\n    \n    \n        The MapComponent is responsible for rendering and initializing a Leaflet-based map\nwithin the Angular application. It uses the Leaflet library to create and manage\nthe map, including its tiles, center point, and zoom functionality.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n            \n                styleUrl\n                ./map.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                centroid\n                            \n                            \n                                    Public\n                                toggleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMap\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toggleService: ToggleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.component.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of the MapComponent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toggleService\n                                                  \n                                                        \n                                                                        ToggleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service used to manage toggle operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initMap\n                        \n                    \n                \n            \n            \n                \n                        \n                    initMap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/map/map.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Initializes the map instance with specified configurations and adds a tile layer.\nThe map is centered on a predefined centroid, set to zoom level 13, and uses a canvas renderer.\nA tile layer based on OpenStreetMap data is added to the map with specified zoom limits and attribution.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/map/map.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after Angular has initialized all data-bound properties of a directive.\nThis method is used to perform component initialization, such as initializing the map and ensuring the map size is updated properly after rendering.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        centroid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         L.LatLngExpression\n\n                    \n                \n                \n                    \n                        Default value : [53.4481, 14.5372]\n                    \n                \n                    \n                        \n                                Defined in src/app/map/map.component.ts:23\n                        \n                    \n\n            \n                \n                    Represents the geographical center point used for map rendering.\nThe centroid specifies a latitude and longitude coordinate in the format of [lat, lng].\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggleService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToggleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/map/map.component.ts:31\n                        \n                    \n\n            \n                \n                    - The service used to manage toggle operations.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit, OnInit, Output } from '@angular/core';\nimport * as L from 'leaflet';\nimport {control} from \"leaflet\";\nimport zoom = control.zoom;\nimport { ToggleService } from '../services/toggle.service';\n\n/**\n * The MapComponent is responsible for rendering and initializing a Leaflet-based map\n * within the Angular application. It uses the Leaflet library to create and manage\n * the map, including its tiles, center point, and zoom functionality.\n *\n */\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrl: './map.component.css'\n})\nexport class MapComponent implements OnInit {\n  /**\n   * Represents the geographical center point used for map rendering.\n   * The centroid specifies a latitude and longitude coordinate in the format of [lat, lng].\n   */\n  centroid: L.LatLngExpression = [53.4481, 14.5372];\n\n  /**\n   * Creates an instance of the MapComponent class.\n   *\n   * @param {ToggleService} toggleService - The service used to manage toggle operations.\n   *\n   */\n  constructor(public toggleService: ToggleService) { }\n\n  /**\n   * Lifecycle hook called after Angular has initialized all data-bound properties of a directive.\n   * This method is used to perform component initialization, such as initializing the map and ensuring the map size is updated properly after rendering.\n   *\n   */\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.initMap();\n      this.toggleService.map.invalidateSize();\n    });\n  }\n\n  /**\n   * Initializes the map instance with specified configurations and adds a tile layer.\n   * The map is centered on a predefined centroid, set to zoom level 13, and uses a canvas renderer.\n   * A tile layer based on OpenStreetMap data is added to the map with specified zoom limits and attribution.\n   *\n   */\n  private initMap(): void {\n    this.toggleService.map = L.map('map', {\n      center: this.centroid,\n      zoom: 13,\n      renderer: L.canvas()\n    });\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 18,\n      minZoom: 10,\n      attribution: '&copy; OpenStreetMap'\n    });\n\n    tiles.addTo(this.toggleService.map);\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogLegendComponent', 'selector': 'app-dialog-legend'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/menu/menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        MenuComponent is responsible for managing and interacting with the application menu's functionality.\nIt provides methods to toggle the sidenav and open dialogs for additional menu-related features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _router\n                            \n                            \n                                    Public\n                                toggleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openDialog\n                            \n                            \n                                openDialogPhone\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toggleService: ToggleService, _router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/menu/menu.component.ts:16\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toggleService\n                                                  \n                                                        \n                                                                        ToggleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService used for toggling sidenav.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter service for navigation and routing within the application.\n\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService used to open and manage Material Design dialogs.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu/menu.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Opens a dialog using the DialogLegendComponent with a fixed width of 50%.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialogPhone\n                        \n                    \n                \n            \n            \n                \nopenDialogPhone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu/menu.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Opens a dialog displaying the DialogLegendComponent with a specified width.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSidenav\n                        \n                    \n                \n            \n            \n                \ntoggleSidenav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu/menu.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility state of the sidenav. Additionally, adjusts the map size if the sidenav visibility changes.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                Does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/menu/menu.component.ts:24\n                        \n                    \n\n            \n                \n                    - Router service for navigation and routing within the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggleService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToggleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/menu/menu.component.ts:24\n                        \n                    \n\n            \n                \n                    - Service used for toggling sidenav.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToggleService } from '../services/toggle.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogLegendComponent } from '../dialog-legend/dialog-legend.component';\n\n/**\n * MenuComponent is responsible for managing and interacting with the application menu's functionality.\n * It provides methods to toggle the sidenav and open dialogs for additional menu-related features.\n */\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrl: './menu.component.css'\n})\nexport class MenuComponent {\n  /**\n   * Initializes a new instance of the class.\n   *\n   * @param {ToggleService} toggleService - Service used for toggling sidenav.\n   * @param {Router} _router - Router service for navigation and routing within the application.\n   * @param {MatDialog} dialog - Service used to open and manage Material Design dialogs.\n   */\n  constructor(public toggleService: ToggleService, public _router: Router, private dialog: MatDialog) {\n  }\n\n  /**\n   * Toggles the visibility state of the sidenav. Additionally, adjusts the map size if the sidenav visibility changes.\n   *\n   * @return {void} Does not return a value.\n   */\n  toggleSidenav() {\n    this.toggleService.toggleSidenav();\n    setTimeout(() => {\n      this.toggleService.map.invalidateSize();\n    }, 200);\n  }\n\n  /**\n   * Opens a dialog using the DialogLegendComponent with a fixed width of 50%.\n   *\n   */\n  openDialog() {\n    this.dialog.open(DialogLegendComponent, {\n      width: \"50%\"\n    });\n  }\n\n  /**\n   * Opens a dialog displaying the DialogLegendComponent with a specified width.\n   *\n   *\n   */\n  openDialogPhone() {\n    this.dialog.open(DialogLegendComponent, {\n      width: \"80%\"\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        menu\n    \n    \n    \n        \n            home\n        \n    \n    \n\n    \n\n    \n        Home\n        About\n    \n\n    \n        info\n    \n    \n        info\n    \n\n    \n        \n            more_vert\n        \n        \n            Home\n            About\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu                                home                                Home        About                info                info                            more_vert                            Home            About            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogLegendComponent', 'selector': 'app-dialog-legend'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PanelComponent.html":{"url":"components/PanelComponent.html","title":"component - PanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/panel/panel.component.ts\n\n\n\n    \n        Description\n    \n    \n        Represents a reusable panel component within the application.\nThe component contains logic for displaying and managing a panel's state,\nwith interaction handled through a toggle service.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-panel\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./panel.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toggleService: ToggleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/panel/panel.component.ts:15\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the class with the provided ToggleService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toggleService\n                                                  \n                                                        \n                                                                        ToggleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service used to toggle sidenav.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggleService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToggleService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/panel/panel.component.ts:21\n                        \n                    \n\n            \n                \n                    - The service used to toggle sidenav.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { ToggleService } from '../services/toggle.service';\n\n/**\n * Represents a reusable panel component within the application.\n * The component contains logic for displaying and managing a panel's state,\n * with interaction handled through a toggle service.\n *\n */\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrl: './panel.component.css'\n})\nexport class PanelComponent {\n  /**\n   * Initializes a new instance of the class with the provided ToggleService.\n   *\n   * @param {ToggleService} toggleService - The service used to toggle sidenav.\n   */\n  constructor(public toggleService: ToggleService) {\n  }\n}\n\n    \n\n    \n         \n    \n        \n    \n\n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DialogLegendComponent', 'selector': 'app-dialog-legend'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PanelComponent', 'selector': 'app-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlumeData.html":{"url":"classes/PlumeData.html","title":"class - PlumeData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlumeData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/plume-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents data related to plume detection and environmental parameters.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                area\n                            \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                detectorId\n                            \n                            \n                                    Public\n                                pollutionType\n                            \n                            \n                                    Public\n                                time\n                            \n                            \n                                    Public\n                                vehicles\n                            \n                            \n                                    Public\n                                weatherStability\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vehicles: Array, weatherStability: number, pollutionType: number, detectorId: number, date: String, time: number, area: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/plume-data.ts:4\n                            \n                        \n\n                \n                    \n                            Constructs an instance of the class PlumeData with information retrieved from Gaussian Plume calculations.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        vehicles\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn array representing the vehicles detected.\n\n\n                                                        \n                                                \n                                                \n                                                        weatherStability\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA numeric value depicting the stability class of the weather.\n\n\n                                                        \n                                                \n                                                \n                                                        pollutionType\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA numeric code indicating the type of pollution detected.\n\n\n                                                        \n                                                \n                                                \n                                                        detectorId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA unique identifier for the detector device.\n\n\n                                                        \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe date of the detection, represented as a string.\n\n\n                                                        \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe time that the calculations took.\n\n\n                                                        \n                                                \n                                                \n                                                        area\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe area that the value was calculated for.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/plume-data.ts:24\n                        \n                    \n\n            \n                \n                    - The area that the value was calculated for.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/plume-data.ts:22\n                        \n                    \n\n            \n                \n                    - The date of the detection, represented as a string.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        detectorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/plume-data.ts:21\n                        \n                    \n\n            \n                \n                    - A unique identifier for the detector device.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollutionType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/plume-data.ts:20\n                        \n                    \n\n            \n                \n                    - A numeric code indicating the type of pollution detected.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/plume-data.ts:23\n                        \n                    \n\n            \n                \n                    - The time that the calculations took.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vehicles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/plume-data.ts:18\n                        \n                    \n\n            \n                \n                    - An array representing the vehicles detected.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        weatherStability\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/plume-data.ts:19\n                        \n                    \n\n            \n                \n                    - A numeric value depicting the stability class of the weather.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlumeData {\n    /**\n     * Constructs an instance of the class PlumeData with information retrieved from Gaussian Plume calculations.\n     *\n     * @param {Array} vehicles - An array representing the vehicles detected.\n     * @param {number} weatherStability - A numeric value depicting the stability class of the weather.\n     * @param {number} pollutionType - A numeric code indicating the type of pollution detected.\n     * @param {number} detectorId - A unique identifier for the detector device.\n     * @param {String} date - The date of the detection, represented as a string.\n     * @param {number} time - The time that the calculations took.\n     * @param {number} area - The area that the value was calculated for.\n     *\n     */\n    constructor(\n      public vehicles: Array,\n      public weatherStability: number,\n      public pollutionType: number,\n      public detectorId: number,\n      public date: String,\n      public time: number,\n      public area: number,\n    ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point.html":{"url":"interfaces/Point.html","title":"interface - Point","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/contours.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a geographical point with latitude and longitude coordinates.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lon\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contours {\n  contours: Contour[];\n  duration: number;\n  error: boolean;\n  msg: string;\n}\n\n/**\n * Represents a contour line or shape defined by points and associated with a specific color and threshold.\n *\n * @property {string} color - The visual representation color of the contour.\n * @property {Point[]} points - An array of points defining the vertices or defining positions of the contour.\n * @property {string} threshold - A value representing the threshold level associated with the contour.\n *\n */\nexport interface Contour {\n  color: string;\n  points: Point[];\n  threshold: string;\n}\n\n/**\n * Represents a geographical point with latitude and longitude coordinates.\n *\n * @property {number} lat - The latitude of the point.\n * @property {number} lon - The longitude of the point.\n *\n */\nexport interface Point {\n  lat: number;\n  lon: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PollutionType.html":{"url":"classes/PollutionType.html","title":"class - PollutionType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PollutionType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/pollution-type.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a type of pollution with its associated details.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                pollutionType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, pollutionType: string, description: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/pollution-type.ts:4\n                            \n                        \n\n                \n                    \n                            Constructor for creating an instance of a pollution entity.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe unique identifier for the pollution type.\n\n\n                                                        \n                                                \n                                                \n                                                        pollutionType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA chemical formula of the pollution type (with footnotes and full chemical formula name).\n\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAdditional textual description providing a simplified record of the chemical formula of the pollution type.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/pollution-type.ts:16\n                        \n                    \n\n            \n                \n                    - Additional textual description providing a simplified record of the chemical formula of the pollution type.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/pollution-type.ts:14\n                        \n                    \n\n            \n                \n                    - The unique identifier for the pollution type.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollutionType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/pollution-type.ts:15\n                        \n                    \n\n            \n                \n                    - A chemical formula of the pollution type (with footnotes and full chemical formula name).\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PollutionType {\n    /**\n     * Constructor for creating an instance of a pollution entity.\n     *\n     * @param {number} id - The unique identifier for the pollution type.\n     * @param {string} pollutionType - A chemical formula of the pollution type (with footnotes and full chemical formula name).\n     * @param {string} description - Additional textual description providing a simplified record of the chemical formula of the pollution type.\n     *\n     */\n    constructor(\n      public id: number,\n      public pollutionType: string,\n      public description: string\n    ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToggleService.html":{"url":"injectables/ToggleService.html","title":"injectable - ToggleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToggleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toggle.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service responsible for managing the state of a toggleable sidenav.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                            \n                                    Public\n                                opened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSidenav\n                        \n                    \n                \n            \n            \n                \ntoggleSidenav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toggle.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         L.Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toggle.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toggle.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * A service responsible for managing the state of a toggleable sidenav.\n *\n */\n@Injectable({providedIn: 'root'})\nexport class ToggleService {\n    public opened: boolean = true;\n    public map: L.Map;\n\n    toggleSidenav() {\n        this.opened = !this.opened;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VehicleGroup.html":{"url":"classes/VehicleGroup.html","title":"class - VehicleGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VehicleGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/vehicle-group.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a vehicle group with associated details.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                vehicleGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, vehicleGroup: string, description: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/vehicle-group.ts:4\n                            \n                        \n\n                \n                    \n                            Constructs a new instance of a vehicle with specified details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe unique identifier for the vehicle group.\n\n\n                                                        \n                                                \n                                                \n                                                        vehicleGroup\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA field containing an HTML icon for a specified vehicle group.\n\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nTextual description providing a vehicle category name.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/vehicle-group.ts:16\n                        \n                    \n\n            \n                \n                    - Textual description providing a vehicle category name.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/vehicle-group.ts:14\n                        \n                    \n\n            \n                \n                    - The unique identifier for the vehicle group.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vehicleGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/vehicle-group.ts:15\n                        \n                    \n\n            \n                \n                    - A field containing an HTML icon for a specified vehicle group.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class VehicleGroup {\n    /**\n     * Constructs a new instance of a vehicle with specified details.\n     *\n     * @param {number} id - The unique identifier for the vehicle group.\n     * @param {string} vehicleGroup - A field containing an HTML icon for a specified vehicle group.\n     * @param {string} description - Textual description providing a vehicle category name.\n     *\n     */\n    constructor(\n      public id: number,\n      public vehicleGroup: string,\n      public description: string\n    ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherStability.html":{"url":"classes/WeatherStability.html","title":"class - WeatherStability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherStability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather-stability.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the stability class of the weather with associated details.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                weatherStability\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, weatherStability: string, description: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/weather-stability.ts:5\n                            \n                        \n\n                \n                    \n                            Creates an instance of a class representing weather data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe unique identifier for the weather stability class.\n\n\n                                                        \n                                                \n                                                \n                                                        weatherStability\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of weather stability class.\n\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAdditional textual description of weather stability.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/weather-stability.ts:17\n                        \n                    \n\n            \n                \n                    - Additional textual description of weather stability.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/weather-stability.ts:15\n                        \n                    \n\n            \n                \n                    - The unique identifier for the weather stability class.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        weatherStability\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/model/weather-stability.ts:16\n                        \n                    \n\n            \n                \n                    - Name of weather stability class.\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WeatherStability {\n    /**\n     * Creates an instance of a class representing weather data.\n     *\n     * @param {number} id - The unique identifier for the weather stability class.\n     * @param {string} weatherStability - Name of weather stability class.\n     * @param {string} description - Additional textual description of weather stability.\n     *\n     */\n    constructor(\n      public id: number,\n      public weatherStability: string,\n      public description: string\n    ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/dialog-legend/dialog-legend.component.ts\n            \n            component\n            DialogLegendComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/form/form.component.ts\n            \n            component\n            FormComponent\n            \n                100 %\n                (65/65)\n            \n        \n        \n            \n                \n                        src/app/form/form.component.ts\n            \n            variable\n            L\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/model/calendar-date.ts\n            \n            class\n            CalendarDate\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/contours.ts\n            \n            interface\n            Contour\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/model/contours.ts\n            \n            interface\n            Contours\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/model/contours.ts\n            \n            interface\n            Point\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/model/detector.ts\n            \n            class\n            Detector\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/model/gps-point.ts\n            \n            class\n            GpsPoint\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/model/plume-data.ts\n            \n            class\n            PlumeData\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/model/pollution-type.ts\n            \n            class\n            PollutionType\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/vehicle-group.ts\n            \n            class\n            VehicleGroup\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/weather-stability.ts\n            \n            class\n            WeatherStability\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/panel/panel.component.ts\n            \n            component\n            PanelComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/backend-data.service.ts\n            \n            injectable\n            BackendDataService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/toggle.service.ts\n            \n            injectable\n            ToggleService\n            \n                25 %\n                (1/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.0\n        \n            @angular/cdk : ^17.0.1\n        \n            @angular/common : ^17.0.0\n        \n            @angular/compiler : ^17.0.0\n        \n            @angular/core : ^17.0.0\n        \n            @angular/flex-layout : ^15.0.0-beta.42\n        \n            @angular/forms : ^17.0.0\n        \n            @angular/material : ^17.0.1\n        \n            @angular/platform-browser : ^17.0.0\n        \n            @angular/platform-browser-dynamic : ^17.0.0\n        \n            @angular/router : ^17.0.0\n        \n            @asymmetrik/ngx-leaflet : ^17.0.0\n        \n            @elfalem/leaflet-curve : ^0.9.2\n        \n            @types/leaflet : ^1.9.8\n        \n            is-fullwidth-code-point : ^5.0.0\n        \n            leaflet : ^1.9.4\n        \n            leaflet-isolines : ^0.1.3\n        \n            leaflet-polylinedecorator : ^1.6.0\n        \n            leaflet-textpath : ^1.2.3\n        \n            material-icons : ^1.13.12\n        \n            moment : ^2.29.4\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGrassNext\nThis project was generated with Angular CLI version 17.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDialogLegendComponent\n\nDialogLegendComponent\n\nAppModule -->\n\nDialogLegendComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nAppModule -->\n\nFormComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nAppModule -->\n\nPanelComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            L   (src/.../form.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/form/form.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        L\n                        \n                    \n                \n            \n\n            \n                \n                    Leaflet map\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
